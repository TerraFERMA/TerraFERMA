#!/usr/bin/env python

import glob
import os
import sys
import argparse
import string
from lxml import etree

parser = argparse.ArgumentParser( \
                       description="""Renames option files to tfml from bml.""")
parser.add_argument('file', action='store', metavar='file', type=str, nargs='+',
                    help='specify a filename or expression')
parser.add_argument('-r', '--recursive', metavar='depth', action='store', type=int, dest='recurse', nargs='?', default=None, 
                    required=False, const=-1,
                    help='recursively search the directory tree for files (if no depth is specified full recursion will be used)')
args = parser.parse_args()

filenames = []
for f in args.file:
  
  if args.recurse is None:
    for filename in glob.glob(f):
      ext = filename.split('.')[-1]
      if ext == "bml":
        filenames.append(os.path.join(os.curdir, filename))
      else:
        print "Don't know how to deal with extension "+ext+".  Only know about bmls."
        sys.exit(1)
  else:
    
    if os.path.isabs(f):
      dirname = os.path.dirname(f)
    else:
      dirname = os.curdir
    dirname = os.path.normpath(dirname)
  
    for root, dirnames, files in os.walk(dirname, topdown=True):
      depth = string.count(root, os.path.sep)
      for filename in glob.glob1(os.path.join(root, os.path.dirname(f)), os.path.split(f)[-1]):
        ext = filename.split('.')[-1]
        if ext == "bml":
          filenames.append(os.path.join(os.path.join(root, os.path.dirname(f)), filename))
        else:
          print "Don't know how to deal with extension "+ext+".  Only know about bmls."
          sys.exit(1)
      if depth == args.recurse:
        dirnames[:] = []

for filename in filenames:
  print 'Updating: '+filename
  newfilename = os.path.join(os.path.split(filename)[0], os.path.split(filename)[-1].split('.')[0]+'.tfml')
  tree = etree.parse(filename)
  tree.getroot().tag = 'terraferma_options'
  tree.write(newfilename)
  print 'Writing: '+newfilename

