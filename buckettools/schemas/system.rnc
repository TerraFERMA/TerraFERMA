# Copyright (C) 2013 Columbia University in the City of New York and others.
#
# Please see the AUTHORS file in the main source directory for a full list
# of contributors.
#
# This file is part of TerraFERMA.
#
# TerraFERMA is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# TerraFERMA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with TerraFERMA. If not, see <http://www.gnu.org/licenses/>.

include "spud_base.rnc"
include "solvers.rnc"
include "function.rnc"
include "ufl.rnc"

system = 
  (
    ## Options describing a system.  
    ##
    ## A system consists of a DOLFIN functionspace, 
    ## the fields on this functionspace, the forms describing the solvers and preconditioners
    ## that act on that functionspace and the coefficients that appear in those forms.
    ##
    ## The system name must be unique amongst any other systems.
    element system {
      attribute name { xsd:string },
      mesh_choice,
      system_ufl_symbol,
      field_options*,
      coefficient_options*,
      nonlinear_solver_options*,
      functional_options*,
      comment
    }
  )

mesh_choice =
  (
    (
      ## The name of the mesh that the system functionspace and any coefficient functions are defined on. 
      ## The actual mesh must be described above in /geometry/mesh.
      element mesh {
        attribute name { xsd:string },
        comment
      }|
      ## The name of the mesh that the system functionspace and any coefficient functions are defined on. 
      ## The actual mesh must be described above in /geometry/mesh.
      ##
      ## Use the automatically available name "Mesh."
      element mesh {
        attribute name { "Mesh" },
        comment
      }
    )
  )

functional_options = 
  (
    ## ufl code and symbol describing a functional.  This must return a single number and have a unique name beneath this field or coefficient.
    element functional {
      attribute name { xsd:string },
      python_code,
      functional_ufl_symbol,
      quadrature_degree,
      quadrature_rule,
      (
        ## Include this functional in the statistics output file (default).
        element include_in_statistics {
          comment
        }|
        ## Exclude this functional from the statistics output file.
        element exclude_from_statistics {
          comment
        }
      ),
      ## Include this functional in the steady state check and output file.
      element include_in_steady_state {
        comment
      }?,
      ## Output the cell integrals of this functional as a mesh function (outputs at the visualization frequency).
      element output_cell_function {
        comment
      }?,
      ## Output the facet integrals of this functional as a mesh function (outputs at the visualization frequency).
      element output_facet_function {
        comment
      }?
    }
  )

