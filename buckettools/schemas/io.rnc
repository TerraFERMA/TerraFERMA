# Copyright (C) 2013 Columbia University in the City of New York and others.
#
# Please see the AUTHORS file in the main source directory for a full list
# of contributors.
#
# This file is part of TerraFERMA.
#
# TerraFERMA is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# TerraFERMA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with TerraFERMA. If not, see <http://www.gnu.org/licenses/>.

include "spud_base.rnc"
include "element.rnc"

io = 
  (
    ## Input/Output options
    element io {
      output_file_options,
      diagnostic_output_options,
      detectors_options,
      checkpointing_options,
      debugging_options,
      comment
    }
  )

output_file_options = 
  (
    ## Base name for files output by the model
    element output_base_name {
      anystring
    }
  )

detectors_options =
  (
    ## Detectors options
    element detectors {
      (
        ## Define a single point detector.  The name must be unique amongst all detectors.
        element point {
          attribute name { xsd:string },
          real_dim_vector
        }|
        ## Define an array of detectors using python.  The name of the array must be unique amongst all detectors.
        element array {
          attribute name { xsd:string },
          ## Python function prescribing detector positions.
          ##
          ## Functions should be of the form:
          ##
          ##     def val():
          ##        # Function code
          ##        return # Return value
          ##
          ## The return value must have length > 0 and each entry must be of the same dimension as the mesh.
          element python {
            python_code
          },
          comment
        }
      )*,
      comment
    }
  )

diagnostic_output_options =
  (
    ## Options to control the functionspace that the visualization output is interpolated to.
    element visualization {
      element_options_scalar_lagrange_visualization
    },
    ## Options to control the period between dumps of diagnostic data.
    ##
    ## NOTE that unless fields and coefficients are explicitly included in diagnostic output
    ## then information about them will not appear in the data, regardless of the periods set.  
    ## i.e. even setting the dump_period to every timestep will produce no output if no fields 
    ## or coefficients are selected to be included!
    element dump_periods {
      (
        ## Period in simulation time between outputs to the visualization (.pvd) file
        ## 
        ## Defaults to every timestep if unselected.
        element visualization_period {
          real
        }|
        ## Period in timesteps between outputs to the visualization (.pvd) file
        ## 
        ## Defaults to every timestep if unselected.
        element visualization_period_in_timesteps {
          integer
        }
      )?,
      (
        ## Period in simulation time between outputs to the statistics (.stat) file
        ## 
        ## Defaults to every timestep if unselected.
        element statistics_period {
          real
        }|
        ## Period in timesteps between outputs to the statistics (.stat) file
        ## 
        ## Defaults to every timestep if unselected.
        element statistics_period_in_timesteps {
          integer
        }
      )?,
      (
        ## Period in simulation time between outputs to the steady state (.steady) file
        ## 
        ## Defaults to every timestep if unselected.
        element steady_state_period {
          real
        }|
        ## Period in timesteps between outputs to the steady state (.steady) file
        ## 
        ## Defaults to every timestep if unselected.
        element steady_state_period_in_timesteps {
          integer
        }
      )?,
      (
        ## Period in simulation time between outputs to the detectors (.det) file
        ## 
        ## Defaults to every timestep if unselected.
        element detectors_period {
          real
        }|
        ## Period in timesteps between outputs to the detectors (.det) file
        ## 
        ## Defaults to every timestep if unselected.
        element detectors_period_in_timesteps {
          integer
        }
      )?,
      comment
    }
  )

checkpointing_options =
  (
    ## Options to enable checkpointing
    element checkpointing {
      (
        ## Period in simulation time between checkpoints.
        element checkpoint_period {
          real
        }|
        ## Period in timesteps between checkpoints.
        element checkpoint_period_in_timesteps {
          integer
        }
      ),
      comment
    }?
  )

debugging_options =
  (
    ## Debugging output options.
    element debugging {
      ## Outputs a pvd file marking the master and slave entities:
      ##
      ## 2: slave entities
      ##
      ## 1: master entities
      ##
      ## 0: all other entities
      element periodic_boundaries {
        empty
      }?
    }?
  )

