include "spud_base.rnc"

geometry = 
   (
      ## Options dealing with the specification of geometry (the dimension and meshes)
      element geometry {
         ## Dimension of the problem.
         ##
         ## <b>This can only be set once!</b>
         ##
         ## This decides the autogenerated shape of all rank>0 options below (though they may still be set independently).
         element dimension {
            # a hard coded integer_value
            element integer_value {
               attribute rank {"0"},
               ( "1" | "2" | "3" )
            }
         },
         (
           ## Options for describing the mesh with a user-specified name.  This name must be unique.
           element mesh {
             attribute name { xsd:string },
             mesh_options
           }|
           ## Options for describing the mesh, automatically called "Mesh".  This name must be unique.
           element mesh {
             attribute name { "Mesh" },
             mesh_options
           }
         )+
      }
   )

mesh_options =
  (
     (
       ## Choose the source of this mesh as an externally generated mesh file.
       element source {
         attribute name { "File" },
         ## Input the basename (i.e. without the .xml) of a DOLFIN format mesh. 
         ## If mesh function files basename_facet_region.xml or basename_physical_region.xml
         ## are found then these will also be automatically loaded and attached to the mesh
         ## as boundary and cell ids respectively.
         ## 
         ## Note that if ids are attached to the mesh they must be used in the forms (dx 
         ## and/or ds will not work without id information - dx(id) and/or ds(id))
         element file {
           filename
         },
         ## Choose the type of ufl cell
         element cell {
           # a hard coded string_value
           element string_value {
             ( "interval" | "triangle" | "tetrahedron" )
           }
         }
       }|
       ## Choose the source of this mesh as an internally generated 1d interval of length 1.
       ##
       ## Boundary ids will be automatically assigned as:
       ##   (left boundary) 1 ----- 2 (right boundary)
       ## 
       ## No region ids will be assigned.   
       element source {
         attribute name { "UnitInterval" },
         ## Specify the number of cells.
         element number_cells {
           integer
         },
         ## The ufl cell type (no option allowed).
         element cell {
           element string_value {
             "interval"
           }
         }
       }|
       ## Choose the source of this mesh as an internally generated 1d interval.
       ##
       ## Boundary ids will be automatically assigned as:
       ##   (left boundary) 1 ----- 2 (right boundary)
       ## 
       ## No region ids will be assigned.   
       element source {
         attribute name { "Interval" },
         ## Location of left boundary.
         element left {
           real
         },
         ## Location of right boundary.
         element right {
           real
         },
         ## Specify the number of cells.
         element number_cells {
           integer
         },
         ## The ufl cell type (no option allowed).
         element cell {
           element string_value {
             "interval"
           }
         }
       }|
       ## Choose the source of this mesh as an internally generated 2d square of width and height 1.
       ##
       ## Boundary ids will be automatically assigned as:
       ##                                         4 (top boundary)
       ##                                       ----- 
       ##   (left boundary) 1 |      | 2 (right boundary)
       ##                                       ----- 
       ##                                         3 (bottom boundary)
       ## 
       ## No region ids will be assigned.   
       element source {
         attribute name { "UnitSquare" },
         ## Specify the number of cells in each dimension.
         element number_cells {
           integer_2_vector
         },
         ## Specify the direction in which the diagonal should lie.
         element diagonal {
           # a hard coded string_value
           element string_value {
             ( "left" | "right" | "right/left" | "left/right" | "crossed" )
           }
         },
         ## The ufl cell type (no option allowed).
         element cell {
           element string_value {
             "triangle"
           }
         }
       }|
       ## Choose the source of this mesh as an internally generated 2d rectangle.
       ##
       ## Boundary ids will be automatically assigned as:
       ##                                         4 (top boundary)
       ##                                       ----- 
       ##   (left boundary) 1 |      | 2 (right boundary)
       ##                                       ----- 
       ##                                         3 (bottom boundary)
       ## 
       ## No region ids will be assigned.   
       element source {
         attribute name { "Rectangle" },
         ## Location of lower left corner.
         ##
         ##    ----- 
         ##   |      | 
         ##   x---- 
         element lower_left {
           real_2_vector
         },
         ## Location of upper right corner.
         ##
         ##    ----x
         ##   |      | 
         ##    ----- 
         element upper_right {
           real_2_vector
         },
         ## Specify the number of cells in each dimension.
         element number_cells {
           integer_2_vector
         },
         ## Specify the direction in which the diagonal should lie.
         element diagonal {
           # a hard coded string_value
           element string_value {
             ( "left" | "right" | "right/left" | "left/right" | "crossed" )
           }
         },
         ## The ufl cell type (no option allowed).
         element cell {
           element string_value {
             "triangle"
           }
         }
       }|
       ## Choose the source of this mesh as an internally generated 2d circle of radius 1.
       ##
       ## No boundary or region ids will be assigned.
       element source {
         attribute name { "UnitCircle" },
         ## Specify the number of cells (same in both dimensions).
         element number_cells {
           integer
         },
         ## Specify the direction in which the diagonal should lie.
         element diagonal {
           # a hard coded string_value
           element string_value {
             ( "left" | "right" | "crossed" )
           }
         },
         ## Specify the transformation to the unit circle.
         element transformation {
           # a hard coded string_value
           element string_value {
             ( "maxn" | "sumn" | "rotsumn" )
           }
         },
         ## The ufl cell type (no option allowed).
         element cell {
           element string_value {
             "triangle"
           }
         }
       }|
       ## Choose the source of this mesh as an internally generated 3d cube of width, depth and height 1.
       ##
       ## Boundary ids will be automatically assigned as:
       ##                                         ______
       ##                                        /  4 (top boundary)
       ##                                       /_____/ 2 (right boundary)
       ##                                       |            |   | 6 (back boundary)
       ##   (left boundary) 1  |       5 (front boundary)
       ##                                       |_____|/3 (bottom boundary)
       ##   
       ## No region ids will be assigned.   
       element source {
         attribute name { "UnitCube" },
         ## Specify the number of cells in each dimension.
         element number_cells {
           integer_3_vector
         },
         ## The ufl cell type (no option allowed).
         element cell {
           element string_value {
             "tetrahedron"
           }
         }
       }|
       ## Choose the source of this mesh as an internally generated 3d box.
       ##
       ## Boundary ids will be automatically assigned as:
       ##                                         ______
       ##                                        /  4 (top boundary)
       ##                                       /_____/ 2 (right boundary)
       ##                                       |            |   | 6 (back boundary)
       ##   (left boundary) 1  |       5 (front boundary)
       ##                                       |_____|/3 (bottom boundary)
       ##   
       ## No region ids will be assigned.   
       element source {
         attribute name { "Box" },
         ## Location of lower back left corner.
         ##        ______
         ##     /            /|
         ##   /_____/  |
         ##   |            |   |
         ##   |   x      |  /
         ##   |_____|/
         element lower_back_left {
           real_3_vector
         },
         ## Location of upper front right corner.
         ##        ______
         ##     /            /|
         ##   /____x/  |
         ##   |            |   |
         ##   |            |  /
         ##   |_____|/
         element upper_front_right {
           real_3_vector
         },
         ## Specify the number of cells in each dimension.
         element number_cells {
           integer_3_vector
         },
         ## The ufl cell type (no option allowed).
         element cell {
           element string_value {
             "tetrahedron"
           }
         }
       }
     )
  )

