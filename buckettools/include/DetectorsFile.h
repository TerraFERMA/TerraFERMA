
#ifndef __DETECTORS_FILE_H
#define __DETECTORS_FILE_H

#include "Bucket.h"
#include <cstdio>
#include <fstream>
#include <string>
#include "DiagnosticsFile.h"

namespace buckettools
{

  //*****************************************************************|************************************************************//
  // DetectorsFile class:
  //
  // A derived class from the base statfile class intended for the output of detectors data to file every dump period.
  //*****************************************************************|************************************************************//
  class DetectorsFile : public DiagnosticsFile
  {

  //*****************************************************************|***********************************************************//
  // Publicly available functions
  //*****************************************************************|***********************************************************//

  public:
    
    //***************************************************************|***********************************************************//
    // Constructors and destructors
    //***************************************************************|***********************************************************//
    
    DetectorsFile(const std::string name);
    
    //***************************************************************|***********************************************************//
    // Header writing functions
    //***************************************************************|***********************************************************//

    void write_header(Bucket &bucket,
                      const bool timestepping);
    
    //***************************************************************|***********************************************************//
    // Data writing functions
    //***************************************************************|***********************************************************//

    void write_data(Bucket &bucket);
    
    void write_data(const uint   timestep,
                    const double elapsedtime, 
                    const double dt, 
                    Bucket       &bucket);
    
  //*****************************************************************|***********************************************************//
  // Private functions
  //*****************************************************************|***********************************************************//

  private:
    
    //***************************************************************|***********************************************************//
    // Header writing functions (continued)
    //***************************************************************|***********************************************************//

    void header_bucket_(Bucket &bucket,
                        uint &column);
    
    //***************************************************************|***********************************************************//
    // Data writing functions (continued)
    //***************************************************************|***********************************************************//

    void data_timestep_(const uint   timestep,
                        const double elapsedtime, 
                        const double dt);
    
    void data_bucket_(Bucket &bucket);

  };
  
  typedef boost::shared_ptr< DetectorsFile > Detectors_ptr;          // define a boost shared ptr type for the class

}
#endif
