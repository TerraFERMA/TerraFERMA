<?xml version='1.0' encoding='utf-8'?>
<harness_options>
  <length>
    <string_value>short</string_value>
  </length>
  <owner>
    <string_value lines="1">cwilson</string_value>
  </owner>
  <description>
    <string_value lines="1">A test of snes vi with dg advection.</string_value>
  </description>
  <simulations>
    <simulation name="Advection">
      <input_file>
        <string_value lines="1" type="filename">advection.tfml</string_value>
      </input_file>
      <run_when name="input_changed_or_output_missing"/>
      <required_input>
        <filenames name="meshxmls">
          <python>
            <string_value lines="20" type="code" language="python">meshxmls = ["interval"+ext for ext in [".xml", "_physical_region.xml", "_facet_region.xml"]]</string_value>
          </python>
        </filenames>
      </required_input>
      <variables>
        <variable name="lower_bound">
          <string_value lines="20" type="code" language="python">from buckettools.statfile import parser

stat = parser("advection.stat")

lower_bound = stat["System"]["Field"]["min"]</string_value>
        </variable>
        <variable name="upper_bound">
          <string_value lines="20" type="code" language="python">from buckettools.statfile import parser

stat = parser("advection.stat")

upper_bound = stat["System"]["Field"]["max"]</string_value>
        </variable>
      </variables>
    </simulation>
  </simulations>
  <tests>
    <test name="lower_bound">
      <string_value lines="20" type="code" language="python">import numpy
assert numpy.all(lower_bound&gt;=0.0)</string_value>
    </test>
    <test name="upper_bound">
      <string_value lines="20" type="code" language="python">import numpy
assert numpy.all(upper_bound&lt;=1.0)</string_value>
    </test>
  </tests>
</harness_options>
