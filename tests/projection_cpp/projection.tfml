<?xml version='1.0' encoding='utf-8'?>
<terraferma_options>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="Mesh">
      <source name="File">
        <file>
          <string_value type="filename" lines="1">square</string_value>
        </file>
        <cell>
          <string_value lines="1">triangle</string_value>
        </cell>
      </source>
    </mesh>
  </geometry>
  <io>
    <output_base_name>
      <string_value lines="1">projection</string_value>
    </output_base_name>
    <visualization>
      <element name="P1">
        <family>
          <string_value lines="1">CG</string_value>
        </family>
        <degree>
          <integer_value rank="0">1</integer_value>
        </degree>
      </element>
    </visualization>
    <dump_periods/>
    <detectors/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <finish_time>
      <real_value rank="0">10.0</real_value>
    </finish_time>
    <timestep>
      <coefficient name="Timestep">
        <ufl_symbol name="global">
          <string_value lines="1">dt</string_value>
        </ufl_symbol>
        <type name="Constant">
          <rank name="Scalar" rank="0">
            <value name="WholeMesh">
              <constant>
                <real_value rank="0">1.0</real_value>
              </constant>
            </value>
          </rank>
        </type>
      </coefficient>
    </timestep>
  </timestepping>
  <global_parameters/>
  <system name="SNESProjection">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">us</string_value>
    </ufl_symbol>
    <field name="Field1">
      <ufl_symbol name="global">
        <string_value lines="1">ss1</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition name="WholeMesh" type="initial_condition">
            <cpp rank="0">
              <members>
                <string_value type="code" language="cpp" lines="20">GenericFunction_ptr pysource1;</string_value>
              </members>
              <initialization>
                <string_value type="code" language="cpp" lines="20">pysource1 = bucket()-&gt;fetch_system("PicardProjection")-&gt;fetch_coeff("PySource1")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value type="code" language="cpp" lines="20">(*pysource1).eval(values, x, cell);
values[0] = values[0]-2.0;</string_value>
              </eval>
            </cpp>
          </initial_condition>
          <boundary_condition name="All">
            <boundary_ids>
              <integer_value rank="1" shape="4">7 8 9 10</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type name="Dirichlet" type="boundary_condition">
                <cpp rank="0">
                  <members>
                    <string_value type="code" language="cpp" lines="20">GenericFunction_ptr pysource1;</string_value>
                  </members>
                  <initialization>
                    <string_value type="code" language="cpp" lines="20">pysource1 = bucket()-&gt;fetch_system("PicardProjection")-&gt;fetch_coeff("PySource1")-&gt;genericfunction_ptr(time());</string_value>
                  </initialization>
                  <eval>
                    <string_value type="code" language="cpp" lines="20">(*pysource1).eval(values, x, cell);
values[0] = values[0]-2.0;</string_value>
                  </eval>
                </cpp>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <field name="Field2">
      <ufl_symbol name="global">
        <string_value lines="1">ss2</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Vector" rank="1">
          <element name="P2">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition name="WholeMesh" type="initial_condition">
            <cpp rank="1">
              <members>
                <string_value type="code" language="cpp" lines="20">GenericFunction_ptr pysource2;</string_value>
              </members>
              <initialization>
                <string_value type="code" language="cpp" lines="20">pysource2 = bucket()-&gt;fetch_system("PicardProjection")-&gt;fetch_coeff("PySource2")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value type="code" language="cpp" lines="20">(*pysource2).eval(values, x, cell);
values[0] = values[0]-2.0;
values[1] = values[1]-2.0;</string_value>
              </eval>
            </cpp>
          </initial_condition>
          <boundary_condition name="All">
            <boundary_ids>
              <integer_value rank="1" shape="4">7 8 9 10</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type name="Dirichlet" type="boundary_condition">
                <cpp rank="1">
                  <members>
                    <string_value type="code" language="cpp" lines="20">GenericFunction_ptr pysource2;</string_value>
                  </members>
                  <initialization>
                    <string_value type="code" language="cpp" lines="20">pysource2 = bucket()-&gt;fetch_system("PicardProjection")-&gt;fetch_coeff("PySource2")-&gt;genericfunction_ptr(time());</string_value>
                  </initialization>
                  <eval>
                    <string_value type="code" language="cpp" lines="20">(*pysource2).eval(values, x, cell);
values[0] = values[0]-2.0;
values[1] = values[1]-2.0;</string_value>
                  </eval>
                </cpp>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <field name="Field3">
      <ufl_symbol name="global">
        <string_value lines="1">ss3</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Tensor" rank="2">
          <element name="P2">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition name="WholeMesh" type="initial_condition">
            <constant name="dim">
              <real_value symmetric="false" rank="2" dim1="dim" dim2="dim" shape="2 2">0.0 0.0 0.0 0.0</real_value>
            </constant>
          </initial_condition>
          <boundary_condition name="All0">
            <boundary_ids>
              <integer_value rank="1" shape="4">7 8 9 10</integer_value>
            </boundary_ids>
            <sub_components name="0">
              <components>
                <integer_value rank="1" shape="1">0</integer_value>
              </components>
              <type name="Dirichlet" type="boundary_condition">
                <cpp rank="0">
                  <members>
                    <string_value type="code" language="cpp" lines="20">GenericFunction_ptr pysource3;</string_value>
                  </members>
                  <initialization>
                    <string_value type="code" language="cpp" lines="20">pysource3 = system()-&gt;fetch_coeff("PySource3")-&gt;genericfunction_ptr(time());</string_value>
                  </initialization>
                  <eval>
                    <string_value type="code" language="cpp" lines="20">dolfin::Array&lt;double&gt; tvalues(4);
(*pysource3).eval(tvalues, x, cell);
values[0] = tvalues[0];</string_value>
                  </eval>
                </cpp>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="All1">
            <boundary_ids>
              <integer_value rank="1" shape="4">7 8 9 10</integer_value>
            </boundary_ids>
            <sub_components name="0">
              <components>
                <integer_value rank="1" shape="1">1</integer_value>
              </components>
              <type name="Dirichlet" type="boundary_condition">
                <cpp rank="0">
                  <members>
                    <string_value type="code" language="cpp" lines="20">GenericFunction_ptr pysource3;</string_value>
                  </members>
                  <initialization>
                    <string_value type="code" language="cpp" lines="20">pysource3 = system()-&gt;fetch_coeff("PySource3")-&gt;genericfunction_ptr(time());</string_value>
                  </initialization>
                  <eval>
                    <string_value type="code" language="cpp" lines="20">dolfin::Array&lt;double&gt; tvalues(4);
(*pysource3).eval(tvalues, x, cell);
values[0] = tvalues[1];</string_value>
                  </eval>
                </cpp>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="All2">
            <boundary_ids>
              <integer_value rank="1" shape="4">7 8 9 10</integer_value>
            </boundary_ids>
            <sub_components name="0">
              <components>
                <integer_value rank="1" shape="1">2</integer_value>
              </components>
              <type name="Dirichlet" type="boundary_condition">
                <cpp rank="0">
                  <members>
                    <string_value type="code" language="cpp" lines="20">GenericFunction_ptr pysource3;</string_value>
                  </members>
                  <initialization>
                    <string_value type="code" language="cpp" lines="20">pysource3 = system()-&gt;fetch_coeff("PySource3")-&gt;genericfunction_ptr(time());</string_value>
                  </initialization>
                  <eval>
                    <string_value type="code" language="cpp" lines="20">dolfin::Array&lt;double&gt; tvalues(4);
(*pysource3).eval(tvalues, x, cell);
values[0] = tvalues[2];</string_value>
                  </eval>
                </cpp>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="All3">
            <boundary_ids>
              <integer_value rank="1" shape="4">7 8 9 10</integer_value>
            </boundary_ids>
            <sub_components name="0">
              <components>
                <integer_value rank="1" shape="1">3</integer_value>
              </components>
              <type name="Dirichlet" type="boundary_condition">
                <cpp rank="0">
                  <members>
                    <string_value type="code" language="cpp" lines="20">GenericFunction_ptr pysource3;</string_value>
                  </members>
                  <initialization>
                    <string_value type="code" language="cpp" lines="20">pysource3 = system()-&gt;fetch_coeff("PySource3")-&gt;genericfunction_ptr(time());</string_value>
                  </initialization>
                  <eval>
                    <string_value type="code" language="cpp" lines="20">dolfin::Array&lt;double&gt; tvalues(4);
(*pysource3).eval(tvalues, x, cell);
values[0] = tvalues[3];</string_value>
                  </eval>
                </cpp>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <coefficient name="PySource1">
      <ufl_symbol name="global">
        <string_value lines="1">pfs1</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P0">
            <family>
              <string_value lines="1">DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <value name="WholeMesh" type="value">
            <python rank="0">
              <string_value type="code" language="python3" lines="20">def val(x,t):
  return 100.0*t</string_value>
            </python>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="PySource2">
      <ufl_symbol name="global">
        <string_value lines="1">pfs2</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Vector" rank="1">
          <element name="P0">
            <family>
              <string_value lines="1">DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <value name="WholeMesh" type="value">
            <python rank="1">
              <string_value type="code" language="python3" lines="20">def val(x,t):
  return [200.0*t, 300.0*t]</string_value>
            </python>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="PySource3">
      <ufl_symbol name="global">
        <string_value lines="1">pfs3</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Tensor" rank="2">
          <element name="P0">
            <family>
              <string_value lines="1">DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <value name="WholeMesh" type="value">
            <python rank="2">
              <string_value type="code" language="python3" lines="20">def val(x,t):
  return [[400.0*t, 500.0*t],[500.0*t, 700.0*t]]</string_value>
            </python>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="Source1">
      <ufl_symbol name="global">
        <string_value lines="1">fs1</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P0">
            <family>
              <string_value lines="1">DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <value name="WholeMesh" type="value">
            <cpp rank="0">
              <members>
                <string_value type="code" language="cpp" lines="20">GenericFunction_ptr pysource1;</string_value>
              </members>
              <initialization>
                <string_value type="code" language="cpp" lines="20">pysource1 = system()-&gt;fetch_coeff("PySource1")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value type="code" language="cpp" lines="20">(*pysource1).eval(values, x, cell);</string_value>
              </eval>
            </cpp>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="Source2">
      <ufl_symbol name="global">
        <string_value lines="1">fs2</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Vector" rank="1">
          <element name="P0">
            <family>
              <string_value lines="1">DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <value name="WholeMesh" type="value">
            <cpp rank="1">
              <members>
                <string_value type="code" language="cpp" lines="20">GenericFunction_ptr pysource2;</string_value>
              </members>
              <initialization>
                <string_value type="code" language="cpp" lines="20">pysource2 = system()-&gt;fetch_coeff("PySource2")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value type="code" language="cpp" lines="20">(*pysource2).eval(values, x, cell);</string_value>
              </eval>
            </cpp>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="Source3">
      <ufl_symbol name="global">
        <string_value lines="1">fs3</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Tensor" rank="2">
          <element name="P0">
            <family>
              <string_value lines="1">DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <value name="WholeMesh" type="value">
            <cpp rank="2">
              <members>
                <string_value type="code" language="cpp" lines="20">GenericFunction_ptr pysource3;</string_value>
              </members>
              <initialization>
                <string_value type="code" language="cpp" lines="20">pysource3 = system()-&gt;fetch_coeff("PySource3")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value type="code" language="cpp" lines="20">(*pysource3).eval(values, x, cell);</string_value>
              </eval>
            </cpp>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <nonlinear_solver name="SimpleSolver">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value type="code" language="python3" lines="20">r1 = ss1_t*(ss1_i-fs1)*dx
r20 = ss2_t[0]*(ss2_i[0]-fs2[0])*dx
r21 = ss2_t[1]*(ss2_i[1]-fs2[1])*dx
r2 = r20 + r21
r3 = inner(ss3_t, (ss3_i-fs3))*dx
r = r1 + r2 + r3</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">r</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value type="code" language="python3" lines="20">a = derivative(r, us_i)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">a</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <snes_type name="ls">
          <ls_type name="cubic"/>
          <convergence_test name="default"/>
        </snes_type>
        <relative_error>
          <real_value rank="0">1.e-10</real_value>
        </relative_error>
        <absolute_error>
          <real_value rank="0">1.e-10</real_value>
        </absolute_error>
        <max_iterations>
          <integer_value rank="0">50</integer_value>
        </max_iterations>
        <monitors>
          <residual/>
        </monitors>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="fieldsplit">
            <composite_type name="additive"/>
            <fieldsplit name="Field1">
              <field name="Field1"/>
              <monitors>
                <view_index_set/>
              </monitors>
              <linear_solver>
                <iterative_method name="preonly"/>
                <preconditioner name="lu">
                  <factorization_package name="mumps"/>
                </preconditioner>
              </linear_solver>
            </fieldsplit>
            <fieldsplit name="Fields2And3">
              <field name="Field2"/>
              <field name="Field3"/>
              <monitors>
                <view_index_set/>
              </monitors>
              <linear_solver>
                <iterative_method name="preonly"/>
                <preconditioner name="fieldsplit">
                  <composite_type name="additive"/>
                  <fieldsplit name="Field2">
                    <field name="Field2"/>
                    <monitors>
                      <view_index_set/>
                    </monitors>
                    <linear_solver>
                      <iterative_method name="preonly"/>
                      <preconditioner name="fieldsplit">
                        <composite_type name="additive"/>
                        <fieldsplit name="Component1">
                          <field name="Field2">
                            <components>
                              <integer_value rank="1" shape="1">0</integer_value>
                            </components>
                          </field>
                          <monitors>
                            <view_index_set/>
                          </monitors>
                          <linear_solver>
                            <iterative_method name="preonly"/>
                            <preconditioner name="lu">
                              <factorization_package name="mumps"/>
                            </preconditioner>
                          </linear_solver>
                        </fieldsplit>
                        <fieldsplit name="Component2">
                          <field name="Field2">
                            <components>
                              <integer_value rank="1" shape="1">1</integer_value>
                            </components>
                          </field>
                          <monitors>
                            <view_index_set/>
                          </monitors>
                          <linear_solver>
                            <iterative_method name="preonly"/>
                            <preconditioner name="lu">
                              <factorization_package name="mumps"/>
                            </preconditioner>
                          </linear_solver>
                        </fieldsplit>
                      </preconditioner>
                    </linear_solver>
                  </fieldsplit>
                  <fieldsplit name="Field3">
                    <field name="Field3"/>
                    <monitors>
                      <view_index_set/>
                    </monitors>
                    <linear_solver>
                      <iterative_method name="preonly"/>
                      <preconditioner name="fieldsplit">
                        <composite_type name="additive"/>
                        <fieldsplit name="Component1">
                          <field name="Field3">
                            <components>
                              <integer_value rank="1" shape="1">0</integer_value>
                            </components>
                          </field>
                          <monitors>
                            <view_index_set/>
                          </monitors>
                          <linear_solver>
                            <iterative_method name="preonly"/>
                            <preconditioner name="lu">
                              <factorization_package name="mumps"/>
                            </preconditioner>
                          </linear_solver>
                        </fieldsplit>
                        <fieldsplit name="Component2">
                          <field name="Field3">
                            <components>
                              <integer_value rank="1" shape="1">1</integer_value>
                            </components>
                          </field>
                          <monitors>
                            <view_index_set/>
                          </monitors>
                          <linear_solver>
                            <iterative_method name="preonly"/>
                            <preconditioner name="lu">
                              <factorization_package name="mumps"/>
                            </preconditioner>
                          </linear_solver>
                        </fieldsplit>
                        <fieldsplit name="Component3">
                          <field name="Field3">
                            <components>
                              <integer_value rank="1" shape="1">2</integer_value>
                            </components>
                          </field>
                          <monitors>
                            <view_index_set/>
                          </monitors>
                          <linear_solver>
                            <iterative_method name="preonly"/>
                            <preconditioner name="lu">
                              <factorization_package name="mumps"/>
                            </preconditioner>
                          </linear_solver>
                        </fieldsplit>
                        <fieldsplit name="Component4">
                          <field name="Field3">
                            <components>
                              <integer_value rank="1" shape="1">3</integer_value>
                            </components>
                          </field>
                          <monitors>
                            <view_index_set/>
                          </monitors>
                          <linear_solver>
                            <iterative_method name="preonly"/>
                            <preconditioner name="lu">
                              <factorization_package name="mumps"/>
                            </preconditioner>
                          </linear_solver>
                        </fieldsplit>
                      </preconditioner>
                    </linear_solver>
                  </fieldsplit>
                </preconditioner>
              </linear_solver>
            </fieldsplit>
          </preconditioner>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="in_timeloop"/>
    </nonlinear_solver>
    <functional name="Field1Integral">
      <string_value type="code" language="python3" lines="20">int = ss1*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field1OldIntegral">
      <string_value type="code" language="python3" lines="20">int = ss1_n*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field2Integral0">
      <string_value type="code" language="python3" lines="20">int = ss2[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field2Integral1">
      <string_value type="code" language="python3" lines="20">int = ss2[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field2OldIntegral0">
      <string_value type="code" language="python3" lines="20">int = ss2_n[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field2OldIntegral1">
      <string_value type="code" language="python3" lines="20">int = ss2_n[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field3Integral00">
      <string_value type="code" language="python3" lines="20">int = ss3[0,0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field3Integral01">
      <string_value type="code" language="python3" lines="20">int = ss3[0,1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field3Integral10">
      <string_value type="code" language="python3" lines="20">int = ss3[1,0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field3Integral11">
      <string_value type="code" language="python3" lines="20">int = ss3[1,1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="PySource1Integral">
      <string_value type="code" language="python3" lines="20">int = pfs1*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="PySource1OldIntegral">
      <string_value type="code" language="python3" lines="20">int = pfs1_n*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="PySource2Integral0">
      <string_value type="code" language="python3" lines="20">int = pfs2[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="PySource2Integral1">
      <string_value type="code" language="python3" lines="20">int = pfs2[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="PySource2OldIntegral0">
      <string_value type="code" language="python3" lines="20">int = pfs2_n[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="PySource2OldIntegral1">
      <string_value type="code" language="python3" lines="20">int = pfs2_n[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Source1Integral">
      <string_value type="code" language="python3" lines="20">int = fs1*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Source1OldIntegral">
      <string_value type="code" language="python3" lines="20">int = fs1_n*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Source2Integral0">
      <string_value type="code" language="python3" lines="20">int = fs2[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Source2Integral1">
      <string_value type="code" language="python3" lines="20">int = fs2[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Source2OldIntegral0">
      <string_value type="code" language="python3" lines="20">int = fs2_n[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Source2OldIntegral1">
      <string_value type="code" language="python3" lines="20">int = fs2_n[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
  </system>
  <system name="PicardProjection">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">up</string_value>
    </ufl_symbol>
    <field name="Field1">
      <ufl_symbol name="global">
        <string_value lines="1">sp1</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition name="WholeMesh" type="initial_condition">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </initial_condition>
          <boundary_condition name="All">
            <boundary_ids>
              <integer_value rank="1" shape="4">7 8 9 10</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type name="Dirichlet" type="boundary_condition">
                <cpp rank="0">
                  <members>
                    <string_value type="code" language="cpp" lines="20">// do nothing</string_value>
                  </members>
                  <initialization>
                    <string_value type="code" language="cpp" lines="20">// do nothing</string_value>
                  </initialization>
                  <eval>
                    <string_value type="code" language="cpp" lines="20">values[0] = 100.0*(*time())+2.0;</string_value>
                  </eval>
                </cpp>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <field name="Field2">
      <ufl_symbol name="global">
        <string_value lines="1">sp2</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Vector" rank="1">
          <element name="P2">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition name="WholeMesh" type="initial_condition">
            <constant name="dim">
              <real_value rank="1" dim1="dim" shape="2">0.0 0.0</real_value>
            </constant>
          </initial_condition>
          <boundary_condition name="All">
            <boundary_ids>
              <integer_value rank="1" shape="4">7 8 9 10</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type name="Dirichlet" type="boundary_condition">
                <cpp rank="1">
                  <members>
                    <string_value type="code" language="cpp" lines="20">// do nothing</string_value>
                  </members>
                  <initialization>
                    <string_value type="code" language="cpp" lines="20">// do nothing</string_value>
                  </initialization>
                  <eval>
                    <string_value type="code" language="cpp" lines="20">values[0] = 200.0*(*time())+2.0;
values[1] = 300.0*(*time())+2.0;</string_value>
                  </eval>
                </cpp>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <coefficient name="Source1">
      <ufl_symbol name="global">
        <string_value lines="1">fp1</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="P0">
            <family>
              <string_value lines="1">DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <value name="WholeMesh" type="value">
            <cpp rank="0">
              <members>
                <string_value type="code" language="cpp" lines="20">GenericFunction_ptr pysource1;</string_value>
              </members>
              <initialization>
                <string_value type="code" language="cpp" lines="20">pysource1 = system()-&gt;fetch_coeff("PySource1")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value type="code" language="cpp" lines="20">(*pysource1).eval(values, x, cell);</string_value>
              </eval>
            </cpp>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="Source2">
      <ufl_symbol name="global">
        <string_value lines="1">fp2</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Vector" rank="1">
          <element name="P0">
            <family>
              <string_value lines="1">DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <value name="WholeMesh" type="value">
            <cpp rank="1">
              <members>
                <string_value type="code" language="cpp" lines="20">GenericFunction_ptr pysource2;</string_value>
              </members>
              <initialization>
                <string_value type="code" language="cpp" lines="20">pysource2 = system()-&gt;fetch_coeff("PySource2")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value type="code" language="cpp" lines="20">(*pysource2).eval(values, x, cell);</string_value>
              </eval>
            </cpp>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="PySource1">
      <ufl_symbol name="global">
        <string_value lines="1">pfp1</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="P0">
            <family>
              <string_value lines="1">DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <value name="WholeMesh" type="value">
            <python rank="0">
              <string_value type="code" language="python3" lines="20">def val(x,t):
  return 100.0*t+2.0</string_value>
            </python>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="PySource2">
      <ufl_symbol name="global">
        <string_value lines="1">pfp2</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Vector" rank="1">
          <element name="P0">
            <family>
              <string_value lines="1">DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <value name="WholeMesh" type="value">
            <python rank="1">
              <string_value type="code" language="python3" lines="20">def val(x,t):
  return [200.0*t+2.0, 300.0*t+2.0]</string_value>
            </python>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="FieldEval1">
      <ufl_symbol name="global">
        <string_value lines="1">spe1</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <value name="WholeMesh" type="value">
            <cpp rank="0">
              <members>
                <string_value type="code" language="cpp" lines="20">GenericFunction_ptr field1;</string_value>
              </members>
              <initialization>
                <string_value type="code" language="cpp" lines="20">field1 = bucket()-&gt;fetch_system("SNESProjection")-&gt;fetch_field("Field1")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value type="code" language="cpp" lines="20">(*field1).eval(values, x, cell);</string_value>
              </eval>
            </cpp>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="FieldEval2">
      <ufl_symbol name="global">
        <string_value lines="1">spe2</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Vector" rank="1">
          <element name="P2">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <value name="WholeMesh" type="value">
            <cpp rank="1">
              <members>
                <string_value type="code" language="cpp" lines="20">GenericFunction_ptr field2;</string_value>
              </members>
              <initialization>
                <string_value type="code" language="cpp" lines="20">field2 = bucket()-&gt;fetch_system("SNESProjection")-&gt;fetch_field("Field2")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value type="code" language="cpp" lines="20">(*field2).eval(values, x, cell);</string_value>
              </eval>
            </cpp>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <nonlinear_solver name="SimpleSolver">
      <type name="Picard">
        <preamble>
          <string_value type="code" language="python3" lines="20">F1 = sp1_t*(sp1_a-fp1)*dx
F20 = sp2_t[0]*(sp2_a[0]-fp2[0])*dx
F21 = sp2_t[1]*(sp2_a[1]-fp2[1])*dx
F2 = F20 + F21
F = F1 + F2</string_value>
        </preamble>
        <form name="Bilinear" rank="1">
          <string_value type="code" language="python3" lines="20">a = lhs(F)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">a</string_value>
          </ufl_symbol>
        </form>
        <form name="Linear" rank="0">
          <string_value type="code" language="python3" lines="20">L = rhs(F)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">L</string_value>
          </ufl_symbol>
        </form>
        <form name="Residual" rank="0">
          <string_value type="code" language="python3" lines="20">r = action(a, up_i) - L</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">r</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <relative_error>
          <real_value rank="0">1.e-10</real_value>
        </relative_error>
        <absolute_error>
          <real_value rank="0">1.e-10</real_value>
        </absolute_error>
        <max_iterations>
          <integer_value rank="0">10</integer_value>
        </max_iterations>
        <monitors/>
        <linear_solver>
          <iterative_method name="cg">
            <relative_error>
              <real_value rank="0">1.e-12</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">20</integer_value>
            </max_iterations>
            <nonzero_initial_guess/>
            <monitors>
              <preconditioned_residual/>
            </monitors>
          </iterative_method>
          <preconditioner name="sor"/>
          <monitors/>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="in_timeloop"/>
    </nonlinear_solver>
    <functional name="Field1Integral">
      <string_value type="code" language="python3" lines="20">int = sp1*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field1OldIntegral">
      <string_value type="code" language="python3" lines="20">int = sp1_n*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field2Integral0">
      <string_value type="code" language="python3" lines="20">int = sp2[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field2Integral1">
      <string_value type="code" language="python3" lines="20">int = sp2[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field2OldIntegral0">
      <string_value type="code" language="python3" lines="20">int = sp2_n[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Field2OldIntegral1">
      <string_value type="code" language="python3" lines="20">int = sp2_n[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Source1Integral">
      <string_value type="code" language="python3" lines="20">int = fp1*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Source1OldIntegral">
      <string_value type="code" language="python3" lines="20">int = fp1_n*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Source2Integral0">
      <string_value type="code" language="python3" lines="20">int = fp2[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Source2Integral1">
      <string_value type="code" language="python3" lines="20">int = fp2[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Source2OldIntegral0">
      <string_value type="code" language="python3" lines="20">int = fp2_n[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="Source2OldIntegral1">
      <string_value type="code" language="python3" lines="20">int = fp2_n[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="PySource1Integral">
      <string_value type="code" language="python3" lines="20">int = pfp1*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="PySource1OldIntegral">
      <string_value type="code" language="python3" lines="20">int = pfp1_n*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="PySource2Integral0">
      <string_value type="code" language="python3" lines="20">int = pfp2[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="PySource2Integral1">
      <string_value type="code" language="python3" lines="20">int = pfp2[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="PySource2OldIntegral0">
      <string_value type="code" language="python3" lines="20">int = pfp2_n[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="PySource2OldIntegral1">
      <string_value type="code" language="python3" lines="20">int = pfp2_n[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="FieldEval1Integral">
      <string_value type="code" language="python3" lines="20">int = spe1*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="FieldEval1OldIntegral">
      <string_value type="code" language="python3" lines="20">int = spe1_n*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="FieldEval2Integral0">
      <string_value type="code" language="python3" lines="20">int = spe2[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="FieldEval2Integral1">
      <string_value type="code" language="python3" lines="20">int = spe2[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="FieldEval2OldIntegral0">
      <string_value type="code" language="python3" lines="20">int = spe2_n[0]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
    <functional name="FieldEval2OldIntegral1">
      <string_value type="code" language="python3" lines="20">int = spe2_n[1]*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">int</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
  </system>
</terraferma_options>
