<?xml version='1.0' encoding='utf-8'?>
<harness_options>
  <length>
    <string_value>short</string_value>
  </length>
  <owner>
    <string_value lines="1">cwilson</string_value>
  </owner>
  <description>
    <string_value lines="1">A solver convergence test with a viscosity contrast.</string_value>
  </description>
  <simulations>
    <simulation name="ViscosityContrast">
      <input_file>
        <string_value lines="1" type="filename">vc.tfml</string_value>
      </input_file>
      <dependencies>
        <run name="Mesh">
          <input_file>
            <string_value lines="1" type="filename">square.msh</string_value>
          </input_file>
          <required_output>
            <filenames name="xmlfiles">
              <python>
                <string_value lines="20" type="code" language="python">xmlfiles = ["square"+ext for ext in [".xml"]]</string_value>
              </python>
            </filenames>
          </required_output>
          <commands>
            <command name="Convert">
              <string_value lines="1">dolfin-convert square.msh square.xml</string_value>
            </command>
          </commands>
        </run>
      </dependencies>
      <variables>
        <variable name="conv_it">
          <string_value lines="20" type="code" language="python">from buckettools.statfile import parser

conv = parser("dc_Benton_Solver_ksp.conv")
conv_it = conv["KSPIteration"]['value'].max()</string_value>
        </variable>
        <variable name="log_max_its">
          <string_value lines="20" type="code" language="python">import numpy

logfile = file("terraferma.log-0", 'r')
loglines = logfile.readlines()
logfile.close()

logits = numpy.array([int(line.split()[0]) for line in loglines if line.find("KSP Residual norm") &gt; 0 ])
log_max_its = logits.max()</string_value>
        </variable>
      </variables>
    </simulation>
  </simulations>
  <tests>
    <test name="conv_it">
      <string_value lines="20" type="code" language="python">assert conv_it &lt; 40</string_value>
    </test>
    <test name="log_max_its">
      <string_value lines="20" type="code" language="python">import numpy
assert numpy.all(log_max_its==int(conv_it))</string_value>
    </test>
  </tests>
</harness_options>
