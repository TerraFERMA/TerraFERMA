<?xml version="1.0" encoding="utf-8" ?>
<terraferma_options>
    <geometry>
        <dimension>
            <integer_value rank="0">2</integer_value>
        </dimension>
        <mesh name="Mesh">
            <source name="UnitSquare">
                <number_cells>
                    <integer_value rank="1" shape="2" dim1="2">32 32</integer_value>
                </number_cells>
                <diagonal>
                    <string_value>right/left</string_value>
                </diagonal>
                <cell>
                    <string_value>triangle</string_value>
                </cell>
            </source>
        </mesh>
    </geometry>
    <io>
        <output_base_name>
            <string_value lines="1">magmawaves_checkpoint</string_value>
        </output_base_name>
        <visualization>
            <element name="P2DG">
                <family>
                    <string_value>DG</string_value>
                </family>
                <degree>
                    <integer_value rank="0">2</integer_value>
                </degree>
            </element>
        </visualization>
        <dump_periods>
            <visualization_period>
                <real_value rank="0">0.05</real_value>
            </visualization_period>
            <statistics_period>
                <real_value rank="0">0.025</real_value>
            </statistics_period>
            <detectors_period>
                <real_value rank="0">0.025</real_value>
            </detectors_period>
        </dump_periods>
        <detectors></detectors>
        <checkpointing>
            <checkpoint_period>
                <real_value rank="0">0.05</real_value>
            </checkpoint_period>
        </checkpointing>
    </io>
    <timestepping>
        <current_time>
            <real_value rank="0">0.153125</real_value>
        </current_time>
        <finish_time>
            <real_value rank="0">0.5</real_value>
        </finish_time>
        <timestep>
            <coefficient name="Timestep">
                <ufl_symbol name="global">
                    <string_value lines="1">dt</string_value>
                </ufl_symbol>
                <type name="Constant">
                    <rank name="Scalar" rank="0">
                        <value name="WholeMesh">
                            <constant>
                                <real_value rank="0">0.003125</real_value>
                            </constant>
                        </value>
                    </rank>
                </type>
            </coefficient>
            <adaptive>
                <constraint name="Courant">
                    <system name="magma"></system>
                    <coefficient name="CourantNumber"></coefficient>
                    <requested_maximum_value>
                        <real_value rank="0">0.353553390593274</real_value>
                    </requested_maximum_value>
                </constraint>
                <adapt_period>
                    <real_value rank="0">2</real_value>
                </adapt_period>
                <increase_tolerance>
                    <real_value rank="0">1.1</real_value>
                </increase_tolerance>
            </adaptive>
        </timestep>
    </timestepping>
    <global_parameters>
        <ufl>
            <string_value lines="20" type="code" language="python"># Global parameters for porosity pressure residual &#x0A;&#x0A;# permeability&#x0A;K = f_i**n&#x0A;&#x0A;#inverse bulk viscosity function&#x0A;Xi_i = hsquared*f_i**m&#x0A;Xi_n = hsquared*f_n**m&#x0A;&#x0A;# facet normal for forcing term&#x0A;fn = FacetNormal(f_e.cell())</string_value>
        </ufl>
    </global_parameters>
    <system name="magma">
        <mesh name="Mesh"></mesh>
        <ufl_symbol name="global">
            <string_value lines="1">us</string_value>
        </ufl_symbol>
        <field name="Pressure">
            <ufl_symbol name="global">
                <string_value lines="1">p</string_value>
            </ufl_symbol>
            <type name="Function">
                <rank name="Scalar" rank="0">
                    <element name="P2">
                        <family>
                            <string_value>CG</string_value>
                        </family>
                        <degree>
                            <integer_value rank="0">2</integer_value>
                        </degree>
                    </element>
                    <boundary_condition name="Top">
                        <boundary_ids>
                            <integer_value rank="1" shape="1">4</integer_value>
                        </boundary_ids>
                        <sub_components name="All">
                            <type name="Dirichlet" type="boundary_condition">
                                <constant>
                                    <real_value rank="0">0</real_value>
                                </constant>
                            </type>
                        </sub_components>
                    </boundary_condition>
                    <initial_condition name="WholeMesh" type="initial_condition">
                        <file>
                            <string_value>magmawaves_magma_2.xml</string_value>
                        </file>
                    </initial_condition>
                </rank>
            </type>
            <diagnostics>
                <include_in_visualization></include_in_visualization>
                <include_in_statistics></include_in_statistics>
            </diagnostics>
            <comment>Compaction pressure  p = Xi Div(V)</comment>
        </field>
        <field name="Porosity">
            <ufl_symbol name="global">
                <string_value lines="1">f</string_value>
            </ufl_symbol>
            <type name="Function">
                <rank name="Scalar" rank="0">
                    <element name="P2">
                        <family>
                            <string_value>CG</string_value>
                        </family>
                        <degree>
                            <integer_value rank="0">2</integer_value>
                        </degree>
                    </element>
                    <boundary_condition name="top">
                        <boundary_ids>
                            <integer_value rank="1" shape="1">4</integer_value>
                        </boundary_ids>
                        <sub_components name="All">
                            <type name="Dirichlet" type="boundary_condition">
                                <constant>
                                    <real_value rank="0">1</real_value>
                                </constant>
                            </type>
                        </sub_components>
                    </boundary_condition>
                    <initial_condition name="WholeMesh" type="initial_condition">
                        <file>
                            <string_value>magmawaves_magma_2.xml</string_value>
                        </file>
                    </initial_condition>
                </rank>
            </type>
            <diagnostics>
                <include_in_visualization></include_in_visualization>
                <include_in_statistics></include_in_statistics>
            </diagnostics>
            <comment>scaled porosity f = phi/phi_0</comment>
        </field>
        <coefficient name="W">
            <ufl_symbol name="global">
                <string_value lines="1">W</string_value>
            </ufl_symbol>
            <type name="Constant">
                <rank name="Vector" rank="1">
                    <value name="WholeMesh" type="value">
                        <constant name="dim">
                            <real_value rank="1" shape="2" dim1="dim">0 -5</real_value>
                        </constant>
                    </value>
                </rank>
            </type>
            <diagnostics></diagnostics>
            <comment>background solid advection velocity</comment>
        </coefficient>
        <coefficient name="CourantNumber">
            <ufl_symbol name="global">
                <string_value lines="1">ac</string_value>
            </ufl_symbol>
            <type name="Function">
                <rank name="Scalar" rank="0">
                    <element name="P0">
                        <family>
                            <string_value>DG</string_value>
                        </family>
                        <degree>
                            <integer_value rank="0">0</integer_value>
                        </degree>
                    </element>
                    <value name="WholeMesh" type="value">
                        <cpp rank="0">
                            <members>
                                <string_value lines="20" type="code" language="cpp">GenericFunction_ptr v;</string_value>
                            </members>
                            <initialization>
                                <string_value lines="20" type="code" language="cpp">v = bucket()-&gt;fetch_system(&quot;magma&quot;)-&gt;fetch_coeff(&quot;W&quot;)-&gt;genericfunction_ptr(time());</string_value>
                            </initialization>
                            <eval>
                                <string_value lines="20" type="code" language="cpp">const dolfin::Cell dcell((*system()-&gt;mesh()), cell.index);&#x0A;dolfin::Array&lt;double&gt; v_values(2);&#x0A;v-&gt;eval(v_values, x, cell);&#x0A;double v_max = std::max(std::abs(v_values[0]),std::abs(v_values[1]));&#x0A;values[0] = (v_max*bucket()-&gt;timestep())/dcell.diameter();</string_value>
                            </eval>
                        </cpp>
                    </value>
                </rank>
            </type>
            <diagnostics>
                <include_in_statistics></include_in_statistics>
            </diagnostics>
        </coefficient>
        <coefficient name="SemiLagrangianSource">
            <ufl_symbol name="global">
                <string_value lines="1">phisl</string_value>
            </ufl_symbol>
            <type name="Expression">
                <rank name="Scalar" rank="0">
                    <element name="P2">
                        <family>
                            <string_value>CG</string_value>
                        </family>
                        <degree>
                            <integer_value rank="0">2</integer_value>
                        </degree>
                    </element>
                    <value name="WholeMesh" type="value">
                        <cpp rank="0">
                            <members>
                                <string_value lines="20" type="code" language="cpp">GenericFunction_ptr f_ptr;&#x0A;GenericFunction_ptr cp_ptr;&#x0A;double h2;&#x0A;int m;</string_value>
                            </members>
                            <initialization>
                                <string_value lines="20" type="code" language="cpp">f_ptr = system()-&gt;fetch_field(&quot;Porosity&quot;)-&gt;genericfunction_ptr(time());&#x0A;cp_ptr = system()-&gt;fetch_field(&quot;Pressure&quot;)-&gt;genericfunction_ptr(time());&#x0A;GenericFunction_ptr h2_ptr = system()-&gt;fetch_coeff(&quot;h_squared&quot;)-&gt;genericfunction_ptr(time());&#x0A;GenericFunction_ptr m_ptr = system()-&gt;fetch_coeff(&quot;m&quot;)-&gt;genericfunction_ptr(time());&#x0A;&#x0A;///need to cast constant pointers to numbers&#x0A;h2 = double(*std::dynamic_pointer_cast&lt;dolfin::Constant&gt;(h2_ptr));&#x0A;m = int(*std::dynamic_pointer_cast&lt;dolfin::Constant&gt;(m_ptr));</string_value>
                            </initialization>
                            <eval>
                                <string_value lines="20" type="code" language="cpp">// evaluate porosity (f), compaction pressure (p), shear viscosity (eta), and source water content (F) at point x&#x0A;dolfin::Array&lt;double&gt; value(1);&#x0A;f_ptr-&gt;eval(value, x, cell);&#x0A;double phi = value[0];&#x0A;cp_ptr-&gt;eval(value, x, cell);&#x0A;double p = value[0];&#x0A;&#x0A;//printf(&quot;h2d2=%g, W=%g, dFdz=%g, p0=%g, cp=%g, phi=%g, visc=%g\n&quot;,h2d2,W,gam,phi0,p,phi,eta);&#x0A;// construct the right hand side function&#x0A;// g(x) = phi_n + .5*dt*(cp_n*Xi_n + W*dFdz/phi0)&#x0A;&#x0A;double dt = bucket()-&gt;timestep();&#x0A;double xi = h2;&#x0A;&#x0A;if (m == 1) &#x0A;{&#x0A;  xi *= phi;&#x0A;}&#x0A;&#x0A;values[0] =  phi + 0.5*dt*p*xi;</string_value>
                            </eval>
                        </cpp>
                    </value>
                </rank>
            </type>
            <diagnostics></diagnostics>
        </coefficient>
        <coefficient name="gstar">
            <ufl_symbol name="global">
                <string_value lines="1">gstar</string_value>
            </ufl_symbol>
            <type name="Expression">
                <rank name="Scalar" rank="0">
                    <element name="Quadrature">
                        <family>
                            <string_value>Quadrature</string_value>
                        </family>
                        <degree>
                            <integer_value rank="0">6</integer_value>
                        </degree>
                    </element>
                    <value name="WholeMesh" type="value">
                        <internal rank="0">
                            <algorithm name="SemiLagrangian">
                                <lookup_function>
                                    <coefficient name="SemiLagrangianSource"></coefficient>
                                </lookup_function>
                                <velocity>
                                    <coefficient name="W"></coefficient>
                                </velocity>
                                <outside_value>
                                    <coefficient name="BackgroundPorosity"></coefficient>
                                </outside_value>
                            </algorithm>
                        </internal>
                    </value>
                </rank>
            </type>
            <diagnostics>
                <include_in_visualization></include_in_visualization>
            </diagnostics>
            <comment>semi-lagrangian right hand side function</comment>
        </coefficient>
        <coefficient name="BackgroundPorosity">
            <ufl_symbol name="global">
                <string_value lines="1">phi0</string_value>
            </ufl_symbol>
            <type name="Constant">
                <rank name="Scalar" rank="0">
                    <value name="WholeMesh" type="value">
                        <constant>
                            <real_value rank="0">1</real_value>
                        </constant>
                    </value>
                </rank>
            </type>
            <diagnostics></diagnostics>
        </coefficient>
        <coefficient name="h_squared">
            <ufl_symbol name="global">
                <string_value lines="1">hsquared</string_value>
            </ufl_symbol>
            <type name="Constant">
                <rank name="Scalar" rank="0">
                    <value name="WholeMesh" type="value">
                        <constant>
                            <real_value rank="0">4096</real_value>
                        </constant>
                    </value>
                </rank>
            </type>
            <diagnostics></diagnostics>
            <comment>(h/delta)**2...   the system size in compacition lengths (delta) squared</comment>
        </coefficient>
        <coefficient name="c">
            <ufl_symbol name="global">
                <string_value lines="1">c</string_value>
            </ufl_symbol>
            <type name="Constant">
                <rank name="Scalar" rank="0">
                    <value name="WholeMesh" type="value">
                        <constant>
                            <real_value rank="0">5</real_value>
                        </constant>
                    </value>
                </rank>
            </type>
            <diagnostics></diagnostics>
            <comment>solitary wave speed</comment>
        </coefficient>
        <coefficient name="n">
            <ufl_symbol name="global">
                <string_value lines="1">n</string_value>
            </ufl_symbol>
            <type name="Constant">
                <rank name="Scalar" rank="0">
                    <value name="WholeMesh" type="value">
                        <constant>
                            <real_value rank="0">3</real_value>
                        </constant>
                    </value>
                </rank>
            </type>
            <diagnostics></diagnostics>
            <comment>exponent n in permeability K = phi**n</comment>
        </coefficient>
        <coefficient name="m">
            <ufl_symbol name="global">
                <string_value lines="1">m</string_value>
            </ufl_symbol>
            <type name="Constant">
                <rank name="Scalar" rank="0">
                    <value name="WholeMesh" type="value">
                        <constant>
                            <real_value rank="0">0</real_value>
                        </constant>
                    </value>
                </rank>
            </type>
            <diagnostics></diagnostics>
            <comment>bulk viscosity exponent m,  such that the viscosity zeta = eta*phi^{- m}</comment>
        </coefficient>
        <coefficient name="d">
            <ufl_symbol name="global">
                <string_value lines="1">d</string_value>
            </ufl_symbol>
            <type name="Constant">
                <rank name="Scalar" rank="0">
                    <value name="WholeMesh" type="value">
                        <constant>
                            <real_value rank="0">2</real_value>
                        </constant>
                    </value>
                </rank>
            </type>
            <diagnostics></diagnostics>
            <comment>dimension of the solitary wave (should be &lt;= dim which is the dimension of the simulation)</comment>
        </coefficient>
        <coefficient name="N">
            <ufl_symbol name="global">
                <string_value lines="1">N</string_value>
            </ufl_symbol>
            <type name="Constant">
                <rank name="Scalar" rank="0">
                    <value name="WholeMesh" type="value">
                        <constant>
                            <real_value rank="0">150</real_value>
                        </constant>
                    </value>
                </rank>
            </type>
            <diagnostics></diagnostics>
            <comment>number of collocation points for sinc-collocation method solitary wave profile generator</comment>
        </coefficient>
        <coefficient name="x0">
            <ufl_symbol name="global">
                <string_value lines="1">x0</string_value>
            </ufl_symbol>
            <type name="Constant">
                <rank name="Vector" rank="1">
                    <value name="WholeMesh" type="value">
                        <constant name="dim">
                            <real_value rank="1" shape="2" dim1="dim">0.5 0.5</real_value>
                        </constant>
                    </value>
                </rank>
            </type>
            <diagnostics></diagnostics>
            <comment>coordinate of initial peak of the solitary wave</comment>
        </coefficient>
        <nonlinear_solver name="InitialGuess">
            <type name="SNES">
                <form name="Residual" rank="0">
                    <string_value lines="20" type="code" language="python">r = f_t*(f_i - 0.5*dt*Xi_n*p_n - gstar_n)*dx</string_value>
                    <ufl_symbol name="solver">
                        <string_value lines="1">r</string_value>
                    </ufl_symbol>
                </form>
                <form name="Jacobian" rank="1">
                    <string_value lines="20" type="code" language="python">a = derivative(r, us_i, us_a)</string_value>
                    <ufl_symbol name="solver">
                        <string_value lines="1">a</string_value>
                    </ufl_symbol>
                    <ident_zeros></ident_zeros>
                </form>
                <quadrature_rule name="canonical"></quadrature_rule>
                <snes_type name="ls">
                    <ls_type name="cubic"></ls_type>
                    <convergence_test name="default"></convergence_test>
                </snes_type>
                <relative_error>
                    <real_value rank="0">1e-07</real_value>
                </relative_error>
                <absolute_error>
                    <real_value rank="0">1e-11</real_value>
                </absolute_error>
                <max_iterations>
                    <integer_value rank="0">50</integer_value>
                </max_iterations>
                <monitors>
                    <residual></residual>
                </monitors>
                <linear_solver>
                    <iterative_method name="cg">
                        <relative_error>
                            <real_value rank="0">1e-07</real_value>
                        </relative_error>
                        <max_iterations>
                            <integer_value rank="0">20</integer_value>
                        </max_iterations>
                        <zero_initial_guess></zero_initial_guess>
                        <monitors></monitors>
                    </iterative_method>
                    <preconditioner name="sor"></preconditioner>
                </linear_solver>
                <never_ignore_solver_failures></never_ignore_solver_failures>
            </type>
            <solve name="in_timeloop"></solve>
        </nonlinear_solver>
        <nonlinear_solver name="Solver">
            <type name="SNES">
                <form name="Residual" rank="0">
                    <string_value lines="20" type="code" language="python"># pressure (p) and porosity (f) residual for magma waves problem&#x0A;# coefficients and parameters defined in the global ufl&#x0A;&#x0A;rp = (K*inner(grad(p_t),grad(p_i)) + p_t*Xi_i*p_i - K*p_t.dx(1))*dx + p_t*K*fn[1]*ds(3)&#x0A;rf = f_t*(f_i - 0.5*dt*Xi_i*p_i - gstar_n)*dx &#x0A;&#x0A;r = rp + rf</string_value>
                    <ufl_symbol name="solver">
                        <string_value lines="1">r</string_value>
                    </ufl_symbol>
                </form>
                <form name="Jacobian" rank="1">
                    <string_value lines="20" type="code" language="python">a = derivative(r, us_i, us_a)</string_value>
                    <ufl_symbol name="solver">
                        <string_value lines="1">a</string_value>
                    </ufl_symbol>
                </form>
                <quadrature_rule name="canonical"></quadrature_rule>
                <snes_type name="ls">
                    <ls_type name="cubic"></ls_type>
                    <convergence_test name="default"></convergence_test>
                </snes_type>
                <relative_error>
                    <real_value rank="0">1e-07</real_value>
                </relative_error>
                <absolute_error>
                    <real_value rank="0">1e-11</real_value>
                </absolute_error>
                <max_iterations>
                    <integer_value rank="0">50</integer_value>
                </max_iterations>
                <monitors>
                    <residual></residual>
                    <convergence_file></convergence_file>
                </monitors>
                <linear_solver>
                    <iterative_method name="fgmres">
                        <restart>
                            <integer_value rank="0">30</integer_value>
                        </restart>
                        <relative_error>
                            <real_value rank="0">1e-07</real_value>
                        </relative_error>
                        <max_iterations>
                            <integer_value rank="0">20</integer_value>
                        </max_iterations>
                        <zero_initial_guess></zero_initial_guess>
                        <monitors></monitors>
                    </iterative_method>
                    <preconditioner name="fieldsplit">
                        <composite_type name="multiplicative"></composite_type>
                        <fieldsplit name="Pressure">
                            <field name="Pressure"></field>
                            <monitors></monitors>
                            <linear_solver>
                                <iterative_method name="preonly"></iterative_method>
                                <preconditioner name="hypre">
                                    <hypre_type name="boomeramg"></hypre_type>
                                </preconditioner>
                            </linear_solver>
                        </fieldsplit>
                        <fieldsplit name="Porosity">
                            <field name="Porosity"></field>
                            <monitors></monitors>
                            <linear_solver>
                                <iterative_method name="gmres">
                                    <restart>
                                        <integer_value rank="0">30</integer_value>
                                    </restart>
                                    <relative_error>
                                        <real_value rank="0">0.001</real_value>
                                    </relative_error>
                                    <max_iterations>
                                        <integer_value rank="0">50</integer_value>
                                    </max_iterations>
                                    <zero_initial_guess></zero_initial_guess>
                                    <monitors></monitors>
                                </iterative_method>
                                <preconditioner name="ilu"></preconditioner>
                            </linear_solver>
                        </fieldsplit>
                    </preconditioner>
                </linear_solver>
                <never_ignore_solver_failures></never_ignore_solver_failures>
            </type>
            <solve name="in_timeloop"></solve>
        </nonlinear_solver>
        <functional name="PressureIntegralPressure">
            <string_value lines="20" type="code" language="python">int = p*dx</string_value>
            <ufl_symbol name="functional">
                <string_value lines="1">int</string_value>
            </ufl_symbol>
            <quadrature_rule name="default"></quadrature_rule>
            <include_in_statistics></include_in_statistics>
        </functional>
        <functional name="PorosityIntegral">
            <string_value lines="20" type="code" language="python">int = f*dx</string_value>
            <ufl_symbol name="functional">
                <string_value lines="1">int</string_value>
            </ufl_symbol>
            <quadrature_rule name="default"></quadrature_rule>
            <include_in_statistics></include_in_statistics>
        </functional>
        <functional name="CourantNumberIntegral">
            <string_value lines="20" type="code" language="python">int = ac*dx</string_value>
            <ufl_symbol name="functional">
                <string_value lines="1">int</string_value>
            </ufl_symbol>
            <quadrature_rule name="default"></quadrature_rule>
            <include_in_statistics></include_in_statistics>
        </functional>
    </system>
</terraferma_options>
