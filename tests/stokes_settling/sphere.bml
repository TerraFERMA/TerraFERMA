<?xml version='1.0' encoding='utf-8'?>
<bucket_options>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="Mesh">
      <source name="File">
        <file>
          <string_value lines="1" type="filename">sphere</string_value>
        </file>
        <cell>
          <string_value>triangle</string_value>
        </cell>
      </source>
    </mesh>
  </geometry>
  <io>
    <output_base_name>
      <string_value lines="1">sphere</string_value>
    </output_base_name>
    <dump_periods/>
    <detectors/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <finish_time>
      <real_value rank="0">1.0</real_value>
    </finish_time>
    <timestep>
      <coefficient name="Timestep">
        <ufl_symbol>
          <string_value lines="1">dt</string_value>
        </ufl_symbol>
        <type name="Constant">
          <rank name="Scalar" rank="0">
            <value name="WholeMesh">
              <constant>
                <real_value rank="0">0.1</real_value>
              </constant>
            </value>
          </rank>
        </type>
      </coefficient>
    </timestep>
  </timestepping>
  <global_parameters>
    <ufl>
      <string_value lines="20" type="code" language="python">dx_fluid = dx(1)
dx_particle = dx(2)
ds_interface = dS(6)</string_value>
    </ufl>
  </global_parameters>
  <system name="Stokes">
    <mesh name="Mesh"/>
    <ufl_symbol>
      <string_value lines="1">us</string_value>
    </ufl_symbol>
    <field name="FluidVelocity">
      <ufl_symbol>
        <string_value lines="1">vf</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Vector" rank="1">
          <element name="P2">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant name="dim">
              <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <field name="FluidPressure">
      <ufl_symbol>
        <string_value lines="1">pf</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <field name="ParticleVelocity">
      <ufl_symbol>
        <string_value lines="1">vp</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="R">
            <family>
              <string_value>R</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <coefficient name="ScaleFactor">
      <ufl_symbol>
        <string_value lines="1">s</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">1.0</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <nonlinear_solver name="Solver">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">n = us_e.cell().n
x = us.cell().x
radius = x[0]
I = Identity(us.cell().d)

nx = dot(n, x)
nscale = 0.5*(nx + abs(nx))/nx
ns = n*nscale

rvf_fluid    = (radius*inner(sym(grad(vf_t)), 2*sym(grad(vf_i))) \
                + vf_t[0]*2*vf_i[0]/radius \
                - (radius*div(vf_t) + vf_t[0])*pf_i \
               )*dx_fluid
rvf_particle = radius*(inner(vf_t, vf_i) \
                       - vf_t[1]*vp_i \
                      )*dx_particle
rvf          = rvf_fluid + rvf_particle

rpf_fluid    = pf_t*(radius*div(vf_i) + vf_i[0])*dx_fluid
rpf_particle = radius*pf_t*pf_i*dx_fluid
rpf          = rpf_fluid + rpf_particle

rvp = radius*vp_t*(vp_i - vp_n)*dx_particle \
      - dt*radius*vp_t*s*dx_particle
      - dt('+')*radius('+')*vp_t('+')*(2*(sym(grad(vf_i('+')))-I*pf_i('+'))[1,i]*(ns('+')+ns('-'))[i])*ds_interface

r = rvf + rpf + rvp
</string_value>
          <ufl_symbol>
            <string_value lines="1">r</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value lines="20" type="code" language="python">a = derivative(r, us_i, us_a)</string_value>
          <ufl_symbol>
            <string_value lines="1">a</string_value>
          </ufl_symbol>
        </form>
        <snes_type name="ls">
          <ls_type name="cubic"/>
        </snes_type>
        <relative_error>
          <real_value rank="0">1.e-6</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">50</integer_value>
        </max_iterations>
        <monitors>
          <residual/>
        </monitors>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="lu">
            <factorization_package name="umfpack"/>
          </preconditioner>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
    </nonlinear_solver>
    <solve name="in_timeloop"/>
  </system>
</bucket_options>
