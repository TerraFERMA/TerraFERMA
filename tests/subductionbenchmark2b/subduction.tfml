<?xml version='1.0' encoding='utf-8'?>
<terraferma_options>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="Mesh">
      <source name="File">
        <file>
          <string_value lines="1" type="filename">subduction</string_value>
        </file>
        <cell>
          <string_value lines="1">triangle</string_value>
        </cell>
      </source>
    </mesh>
  </geometry>
  <io>
    <output_base_name>
      <string_value lines="1">subduction</string_value>
    </output_base_name>
    <visualization>
      <element name="P1">
        <family>
          <string_value lines="1">CG</string_value>
        </family>
        <degree>
          <integer_value rank="0">1</integer_value>
        </degree>
      </element>
    </visualization>
    <dump_periods/>
    <detectors>
      <point name="SlabPoint">
        <real_value shape="2" dim1="dim" rank="1">60 -60</real_value>
      </point>
      <array name="Wedge">
        <python>
          <string_value lines="20" type="code" language="python">def val():
  from numpy import arange
  coords = []
  for i in arange(54.0,120.0+6.0, 6.0):
    for j in arange(-54.0, -i-6.0, -6.0):
      coords.append([i,j])
  return coords</string_value>
        </python>
      </array>
      <array name="Slab">
        <python>
          <string_value lines="20" type="code" language="python">def val():
  from numpy import arange
  coords = []
  for i in arange(0.0,210.0+6.0, 6.0):
    coords.append([i,-i])
  return coords</string_value>
        </python>
      </array>
    </detectors>
    <checkpointing>
      <checkpoint_period_in_timesteps>
        <integer_value rank="0">1</integer_value>
      </checkpoint_period_in_timesteps>
    </checkpointing>
  </io>
  <global_parameters/>
  <system name="Solid">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">us</string_value>
    </ufl_symbol>
    <field name="Temperature">
      <ufl_symbol name="global">
        <string_value lines="1">T</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P2">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">273.0</real_value>
            </constant>
          </initial_condition>
          <boundary_condition name="Top">
            <boundary_ids>
              <integer_value shape="1" rank="1">1</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <constant>
                  <real_value rank="0">273.</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="WedgeSideIn">
            <boundary_ids>
              <integer_value shape="1" rank="1">5</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <constant>
                  <real_value rank="0">1573.0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="SlabSideIn">
            <boundary_ids>
              <integer_value shape="1" rank="1">2</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <python rank="0">
                  <string_value lines="20" type="code" language="python">def val(X):
  t_50 = 50.0*1.e6*365*24*60*60
  T0 = 1573.0
  Ts = 273.0
  kappa = 0.7272e-6
  import math
  def erf(x):
    # save the sign of x
    sign = 1.0
    if x &lt; 0.0: 
      sign = -1.0
    x = abs(x)
    # constants
    a1 =  0.254829592
    a2 = -0.284496736
    a3 =  1.421413741
    a4 = -1.453152027
    a5 =  1.061405429
    p  =  0.3275911
    # A&amp;S formula 7.1.26
    t = 1.0/(1.0 + p*x)
    y = 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*math.exp(-x*x)
    return sign*y # erf(-x) = -erf(x)
    
  depth = -X[1]*1000.0
  value = Ts + (T0-Ts)*(erf(depth/(2.*math.sqrt(kappa*t_50))))
  return value</string_value>
                </python>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="OverRidingSide">
            <boundary_ids>
              <integer_value shape="1" rank="1">6</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <python rank="0">
                  <string_value lines="20" type="code" language="python">def val(X):
  crust_grad = 0.026*1000.0
  Ts = 273.0
  value = Ts - crust_grad*X[1]
  return value</string_value>
                </python>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
        <include_in_detectors/>
      </diagnostics>
    </field>
    <field name="Velocity">
      <ufl_symbol name="global">
        <string_value lines="1">v</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Vector" rank="1">
          <element name="P2">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="NotWedge">
            <region_ids>
              <integer_value shape="2" rank="1">1 2</integer_value>
            </region_ids>
            <constant name="dim">
              <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
            </constant>
          </initial_condition>
          <initial_condition type="initial_condition" name="Wedge">
            <region_ids>
              <integer_value shape="1" rank="1">3</integer_value>
            </region_ids>
            <python rank="1">
              <string_value lines="20" type="code" language="python">def val(X):
  from math import sqrt, sin, cos, atan
  plate_thickness = 50.0
  values = [0.0, 0.0] 
  depth = -plate_thickness - X[1];
  if (depth != 0.0):
    xdist = X[0] - plate_thickness;
    if (xdist == 0.): xdist = 0.000000000000001;
    alfa = atan(1.0);
    theta = atan(depth/xdist);
    vtheta = -((alfa - theta)*sin(theta)*sin(alfa) - (alfa*theta*sin(alfa-theta))) / (alfa**2 - (sin(alfa))**2);
    vr = (((alfa-theta)*cos(theta)*sin(alfa)) - (sin(alfa)*sin(theta)) - (alfa*sin(alfa-theta)) + (alfa*theta*cos(alfa-theta)))/(alfa**2 - (sin(alfa))**2);
    values[0] = - (vtheta*sin(theta) - vr*cos(theta));
    values[1] = - (vtheta*cos(theta) + vr*sin(theta));
  return values</string_value>
            </python>
          </initial_condition>
          <boundary_condition name="SlabTop">
            <boundary_ids>
              <integer_value shape="1" rank="1">8</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <constant name="dim">
                  <real_value shape="2" dim1="dim" rank="1">0.7071067811865476 -0.7071067811865476</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="WedgeTop">
            <boundary_ids>
              <integer_value shape="1" rank="1">9</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <constant name="dim">
                  <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <field name="Pressure">
      <ufl_symbol name="global">
        <string_value lines="1">p</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <coefficient name="PlateVelocity">
      <ufl_symbol name="global">
        <string_value lines="1">vp</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Vector" rank="1">
          <element name="P2">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <value type="value" name="WholeMesh">
            <constant name="dim">
              <real_value shape="2" dim1="dim" rank="1">0.7071067811865476 -0.7071067811865476</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="ZeroRHS">
      <ufl_symbol name="global">
        <string_value lines="1">z</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <nonlinear_solver name="Solver">
      <type name="Picard">
        <preamble>
          <string_value lines="20" type="code" language="python">d     = 1000.0
v0    = 0.05/(365.*24.*60.*60.)
kappa = 0.7272e-6
kappaprime = kappa/(d*v0)

etamax = 1.e26
Adisl = 28968.6
Edisl = 540.e3
n = 3.5
R = 8.3145
nexp = (1.-n)/n
edot = sym(grad(v_i))
eII = sqrt(0.5*inner(edot, edot))
etadisl = Adisl*exp(Edisl/(n*R*T_i))*(eII**nexp)
etaeff  = (etamax*etadisl)/(etamax + etadisl)
etascale = 1.e21
etaprime = etaeff/etascale

dx_plate = dx(1)
dx_slab  = dx(2)
dx_wedge = dx(3)

FT_plate = inner(grad(T_t), kappaprime*grad(T_a))*dx_plate
FT_wedge = T_t*inner(v_i, grad(T_a))*dx_wedge + inner(grad(T_t), kappaprime*grad(T_a))*dx_wedge
FT_slab  = T_t*inner(vp_i, grad(T_a))*dx_slab + inner(grad(T_t), kappaprime*grad(T_a))*dx_slab
FT_dummy = T_t*z_i*dx_plate
FT = FT_plate + FT_wedge + FT_slab + FT_dummy

Fv_wedge = inner(sym(grad(v_t)), 2*etaprime*sym(grad(v_a)))*dx_wedge - div(v_t)*p_a*dx_wedge
Fv = Fv_wedge

Fp_wedge = p_t*div(v_a)*dx_wedge
Fp = Fp_wedge

F = FT + Fv + Fp</string_value>
        </preamble>
        <form name="Bilinear" rank="1">
          <string_value lines="20" type="code" language="python">a = lhs(F)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">a</string_value>
          </ufl_symbol>
          <ident_zeros/>
        </form>
        <form name="Linear" rank="0">
          <string_value lines="20" type="code" language="python">L = rhs(F)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">L</string_value>
          </ufl_symbol>
        </form>
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">res = action(a, us_i) - L</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">res</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <relative_error>
          <real_value rank="0">1.e-6</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">100</integer_value>
        </max_iterations>
        <min_iterations>
          <integer_value rank="0">2</integer_value>
        </min_iterations>
        <monitors/>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="fieldsplit">
            <composite_type name="additive"/>
            <fieldsplit name="WedgeStokesTEverywhere">
              <field name="Temperature"/>
              <field name="Velocity">
                <region_ids>
                  <integer_value shape="1" rank="1">3</integer_value>
                </region_ids>
              </field>
              <field name="Pressure">
                <region_ids>
                  <integer_value shape="1" rank="1">3</integer_value>
                </region_ids>
              </field>
              <monitors/>
              <linear_solver>
                <iterative_method name="preonly"/>
                <preconditioner name="lu">
                  <factorization_package name="umfpack"/>
                </preconditioner>
              </linear_solver>
            </fieldsplit>
            <fieldsplit name="EverythingElse">
              <monitors/>
              <linear_solver>
                <iterative_method name="preonly"/>
                <preconditioner name="jacobi"/>
              </linear_solver>
            </fieldsplit>
          </preconditioner>
          <monitors/>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="at_start"/>
    </nonlinear_solver>
  </system>
  <system name="Divergence">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">ud</string_value>
    </ufl_symbol>
    <field name="Divergence">
      <ufl_symbol name="global">
        <string_value lines="1">d</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
      </diagnostics>
    </field>
    <nonlinear_solver name="Solver">
      <type name="Picard">
        <preamble>
          <string_value lines="20" type="code" language="python">dx_wedge = dx(3)

r = d_t*d_a*dx_wedge - d_t*div(v_i)*dx_wedge</string_value>
        </preamble>
        <form name="Bilinear" rank="1">
          <string_value lines="20" type="code" language="python">a = lhs(r)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">a</string_value>
          </ufl_symbol>
          <ident_zeros/>
        </form>
        <form name="Linear" rank="0">
          <string_value lines="20" type="code" language="python">L = rhs(r)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">L</string_value>
          </ufl_symbol>
        </form>
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">res = action(a, ud_i) - L</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">res</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <relative_error>
          <real_value rank="0">1.e-6</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">1</integer_value>
        </max_iterations>
        <monitors/>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="fieldsplit">
            <composite_type name="additive"/>
            <fieldsplit name="Wedge">
              <field name="Divergence">
                <region_ids>
                  <integer_value shape="1" rank="1">3</integer_value>
                </region_ids>
              </field>
              <monitors>
                <view_index_set/>
              </monitors>
              <linear_solver>
                <iterative_method name="preonly"/>
                <preconditioner name="lu">
                  <factorization_package name="umfpack"/>
                </preconditioner>
              </linear_solver>
            </fieldsplit>
            <fieldsplit name="NotWedge">
              <monitors>
                <view_index_set/>
              </monitors>
              <linear_solver>
                <iterative_method name="preonly"/>
                <preconditioner name="jacobi"/>
              </linear_solver>
            </fieldsplit>
          </preconditioner>
          <monitors/>
        </linear_solver>
        <ignore_all_solver_failures/>
      </type>
      <solve name="with_diagnostics"/>
    </nonlinear_solver>
  </system>
  <system name="Viscosity">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">uvisc</string_value>
    </ufl_symbol>
    <field name="Viscosity">
      <ufl_symbol name="global">
        <string_value lines="1">visc</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P0">
            <family>
              <string_value lines="1">DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
        <include_in_detectors/>
      </diagnostics>
    </field>
    <nonlinear_solver name="Solver">
      <type name="Picard">
        <preamble>
          <string_value lines="20" type="code" language="python">etamax = 1.e26
R = 8.3145
etascale = 1.e21

Adisl = 28968.6
Edisl = 540.e3
n = 3.5
nexp = (1.-n)/n
edot = sym(grad(v_i))
eII = sqrt(0.5*inner(edot, edot))
etadisl = Adisl*exp(Edisl/(n*R*T_i))*(eII**nexp)
etadisleff  = (etamax*etadisl)/(etamax + etadisl)
etadislprime = etadisleff/etascale

Adiff = 1.32043e9
Ediff = 335e3
etadiff = Adiff*exp(Ediff/(R*T_i))
etadiffeff  = (etamax*etadiff)/(etamax + etadiff)
etadiffprime = etadiffeff/etascale

dx_plate = dx(1)
dx_slab  = dx(2)
dx_wedge = dx(3)

bvisc_wedge = visc_t*visc_a - visc_t*etadislprime
bvisc_plate = visc_t*visc_a - visc_t*etadiffprime

r_plate = bvisc_plate*dx_plate
r_wedge = bvisc_wedge*dx_wedge
r_slab = bvisc_plate*dx_slab

r = r_plate + r_wedge + r_slab</string_value>
        </preamble>
        <form name="Bilinear" rank="1">
          <string_value lines="20" type="code" language="python">a = lhs(r)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">a</string_value>
          </ufl_symbol>
          <ident_zeros/>
        </form>
        <form name="Linear" rank="0">
          <string_value lines="20" type="code" language="python">L = rhs(r)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">L</string_value>
          </ufl_symbol>
        </form>
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">res = action(a, uvisc_i) - L</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">res</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <relative_error>
          <real_value rank="0">1.e-6</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">1</integer_value>
        </max_iterations>
        <monitors/>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="jacobi"/>
          <monitors/>
        </linear_solver>
        <ignore_all_solver_failures/>
      </type>
      <solve name="with_diagnostics"/>
    </nonlinear_solver>
  </system>
</terraferma_options>
