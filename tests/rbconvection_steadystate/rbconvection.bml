<?xml version='1.0' encoding='utf-8'?>
<bucket_options>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="Frank">
      <source name="UnitSquare">
        <number_cells>
          <integer_value shape="2" dim1="2" rank="1">32 32</integer_value>
        </number_cells>
        <diagonal>
          <string_value>right</string_value>
        </diagonal>
        <cell>
          <string_value>triangle</string_value>
        </cell>
      </source>
    </mesh>
  </geometry>
  <io>
    <output_base_name>
      <string_value lines="1">poisson</string_value>
    </output_base_name>
    <detectors>
      <point name="Point">
        <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
      </point>
      <array name="Array">
        <number_of_detectors>
          <integer_value rank="0">1</integer_value>
        </number_of_detectors>
        <python>
          <string_value lines="20" type="python">def val():
  return [[0.5, 0.5]]</string_value>
        </python>
      </array>
    </detectors>
  </io>
  <system name="SNESPoisson">
    <mesh name="Frank"/>
    <ufl_symbol>
      <string_value lines="1">u</string_value>
    </ufl_symbol>
    <field name="Temperature">
      <ufl_symbol>
        <string_value lines="1">s</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P2">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition name="WholeMesh">
            <python rank="0">
              <string_value lines="20" type="python">def val(x):
  return 1-x[0]</string_value>
            </python>
          </initial_condition>
          <boundary_condition name="Top">
            <boundary_ids>
              <integer_value shape="1" rank="1">4</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type name="Dirichlet">
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="Bottom">
            <boundary_ids>
              <integer_value shape="1" rank="1">3</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type name="Dirichlet">
                <constant>
                  <real_value rank="0">1.0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
        <output>
          <include_in_diagnostics>
            <functional name="TopSurfaceIntegral">
              <string_value lines="20" type="python">int = grad(T)[1]*ds(4)</string_value>
              <ufl_symbol>
                <string_value lines="1">int</string_value>
              </ufl_symbol>
            </functional>
          </include_in_diagnostics>
        </output>
      </type>
    </field>
    <field name="Velocity">
      <ufl_symbol>
        <string_value lines="1">v</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Vector" rank="1">
          <element name="P2">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">2</integer_value>
            </degree>
          </element>
          <initial_condition name="WholeMesh">
            <constant name="dim">
              <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
            </constant>
          </initial_condition>
          <boundary_condition name="TopBottom">
            <boundary_ids>
              <integer_value shape="2" rank="1">3 4</integer_value>
            </boundary_ids>
            <sub_components name="Y">
              <components>
                <integer_value shape="1" rank="1">1</integer_value>
              </components>
              <type name="Dirichlet">
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
          <boundary_condition name="LeftRight">
            <boundary_ids>
              <integer_value shape="2" rank="1">1 2</integer_value>
            </boundary_ids>
            <sub_components name="X">
              <components>
                <integer_value shape="1" rank="1">0</integer_value>
              </components>
              <type name="Dirichlet">
                <constant>
                  <real_value rank="0">0.0</real_value>
                </constant>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
        <output>
          <include_in_diagnostics>
            <functional name="L2Norm">
              <string_value type="python" lines="20">int = inner(v,v)*dx</string_value>
              <ufl_symbol>
                <string_value lines="1">int</string_value>
              </ufl_symbol>
            </functional>
          </include_in_diagnostics>
        </output>
      </type>
    </field>
    <field name="Pressure">
      <ufl_symbol>
        <string_value lines="1">p</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition name="WholeMesh">
            <constant>
              <real_value rank="0">0.0</real_value>
            </constant>
          </initial_condition>
        </rank>
        <output>
          <include_in_diagnostics/>
        </output>
      </type>
    </field>
    <nonlinear_solver name="SimpleSolver">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value lines="20" type="python">Ra = 1.e4

rv = (inner(sym(grad(v_t)), 2*sym(grad(v_i))) - div(v_t)*p_i - Ra*T_t*v_i[1])*dx
rp = p_t*div(v_i)*dx
rT = (T_t*inner(v_i,grad(T_i)) + inner(grad(T_t),grad(T_i)))*dx

r = rv + rp + rT
</string_value>
          <ufl_symbol>
            <string_value lines="1">r</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value lines="20" type="python">a = derivative(r, u_i)</string_value>
          <ufl_symbol>
            <string_value lines="1">a</string_value>
          </ufl_symbol>
        </form>
        <snes_type name="ls"/>
        <relative_error>
          <real_value rank="0">1.e-6</real_value>
        </relative_error>
        <max_iterations>
          <integer_value rank="0">50</integer_value>
        </max_iterations>
        <monitors>
          <residual/>
        </monitors>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="lu"/>
        </linear_solver>
      </type>
    </nonlinear_solver>
  </system>
</bucket_options>
