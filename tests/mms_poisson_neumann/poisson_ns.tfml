<?xml version='1.0' encoding='utf-8'?>
<terraferma_options>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="Mesh">
      <source name="UnitSquare">
        <number_cells>
          <integer_value shape="2" dim1="2" rank="1">32 32</integer_value>
        </number_cells>
        <diagonal>
          <string_value>right/left</string_value>
        </diagonal>
        <cell>
          <string_value>triangle</string_value>
        </cell>
      </source>
    </mesh>
  </geometry>
  <io>
    <output_base_name>
      <string_value lines="1">poisson</string_value>
    </output_base_name>
    <dump_periods/>
    <detectors>
      <point name="BottomLeft">
        <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
      </point>
      <point name="TopRight">
        <real_value shape="2" dim1="dim" rank="1">1.0 1.0</real_value>
      </point>
      <point name="TopLeft">
        <real_value shape="2" dim1="dim" rank="1">0.0 1.0</real_value>
      </point>
      <point name="BottomRight">
        <real_value shape="2" dim1="dim" rank="1">1.0 0.0</real_value>
      </point>
    </detectors>
  </io>
  <global_parameters/>
  <system name="Poisson">
    <mesh name="Mesh"/>
    <ufl_symbol>
      <string_value lines="1">us</string_value>
    </ufl_symbol>
    <field name="Field1">
      <ufl_symbol>
        <string_value lines="1">u1</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="UserDefined">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.</real_value>
            </constant>
          </initial_condition>
          <zero_point name="Point">
            <coordinates>
              <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
            </coordinates>
          </zero_point>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
        <include_in_detectors/>
        <include_residual_in_visualization/>
      </diagnostics>
    </field>
    <field name="Field2">
      <ufl_symbol>
        <string_value lines="1">u2</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="UserDefined">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.</real_value>
            </constant>
          </initial_condition>
          <zero_point name="Point">
            <coordinates>
              <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
            </coordinates>
          </zero_point>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
        <include_in_detectors/>
        <include_residual_in_visualization/>
      </diagnostics>
    </field>
    <field name="Field3">
      <ufl_symbol>
        <string_value lines="1">u3</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="UserDefined">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.</real_value>
            </constant>
          </initial_condition>
          <zero_point name="Point">
            <coordinates>
              <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
            </coordinates>
          </zero_point>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
        <include_in_detectors/>
        <include_residual_in_visualization/>
      </diagnostics>
    </field>
    <field name="Field4">
      <ufl_symbol>
        <string_value lines="1">u4</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="UserDefined">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.</real_value>
            </constant>
          </initial_condition>
          <zero_point name="Point">
            <coordinates>
              <real_value shape="2" dim1="dim" rank="1">0.0 0.0</real_value>
            </coordinates>
          </zero_point>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
        <include_in_detectors/>
        <include_residual_in_visualization/>
      </diagnostics>
    </field>
    <coefficient name="Source">
      <ufl_symbol>
        <string_value lines="1">f</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="UserDefined">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <value type="value" name="WholeMesh">
            <python rank="0">
              <string_value lines="20" type="code" language="python">from math import exp
def val(x):
  global exp
  return -5./4.*exp(x[0] + x[1]/2.)</string_value>
            </python>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <coefficient name="BoundaryGradient">
      <ufl_symbol>
        <string_value lines="1">g</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Vector" rank="1">
          <element name="UserDefined">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <value type="value" name="WholeMesh">
            <python rank="1">
              <string_value lines="20" type="code" language="python">from math import exp
def val(x):
  global exp
  return [exp(x[0] + x[1]/2.), 0.5*exp(x[0] + x[1]/2.)]</string_value>
            </python>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <coefficient name="AnalyticField">
      <ufl_symbol>
        <string_value lines="1">ue</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="UserDefined">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <value type="value" name="WholeMesh">
            <python rank="0">
              <string_value lines="20" type="code" language="python">from math import exp
def val(x):
  global exp
  return exp(x[0] + x[1]/2.) - 1.</string_value>
            </python>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="AbsoluteDifference1">
      <ufl_symbol>
        <string_value lines="1">d1</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="UserDefined">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <value type="value" name="WholeMesh">
            <cpp rank="0">
              <members>
                <string_value lines="20" type="code" language="cpp">GenericFunction_ptr num_ptr, sol_ptr;</string_value>
              </members>
              <initialization>
                <string_value lines="20" type="code" language="cpp">num_ptr = system()-&gt;fetch_field("Field1")-&gt;genericfunction_ptr(time());
sol_ptr = system()-&gt;fetch_coeff("AnalyticField")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value lines="20" type="code" language="cpp">dolfin::Array&lt;double&gt; num(1), sol(1);
num_ptr-&gt;eval(num, x, cell);
sol_ptr-&gt;eval(sol, x, cell);
values[0] = std::abs(num[0] - sol[0]);</string_value>
              </eval>
            </cpp>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics>
          <functional name="L2NormSquared">
            <string_value lines="20" type="code" language="python">int = d1*d1*dx</string_value>
            <ufl_symbol>
              <string_value lines="1">int</string_value>
            </ufl_symbol>
            <quadrature_rule name="default"/>
          </functional>
        </include_in_statistics>
      </diagnostics>
    </coefficient>
    <coefficient name="AbsoluteDifference2">
      <ufl_symbol>
        <string_value lines="1">d2</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="UserDefined">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <value type="value" name="WholeMesh">
            <cpp rank="0">
              <members>
                <string_value lines="20" type="code" language="cpp">GenericFunction_ptr num_ptr, sol_ptr;</string_value>
              </members>
              <initialization>
                <string_value lines="20" type="code" language="cpp">num_ptr = system()-&gt;fetch_field("Field2")-&gt;genericfunction_ptr(time());
sol_ptr = system()-&gt;fetch_coeff("AnalyticField")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value lines="20" type="code" language="cpp">dolfin::Array&lt;double&gt; num(1), sol(1);
num_ptr-&gt;eval(num, x, cell);
sol_ptr-&gt;eval(sol, x, cell);
values[0] = std::abs(num[0] - sol[0]);</string_value>
              </eval>
            </cpp>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics>
          <functional name="L2NormSquared">
            <string_value lines="20" type="code" language="python">int = d2*d2*dx</string_value>
            <ufl_symbol>
              <string_value lines="1">int</string_value>
            </ufl_symbol>
            <quadrature_rule name="default"/>
          </functional>
        </include_in_statistics>
      </diagnostics>
    </coefficient>
    <coefficient name="AbsoluteDifference3">
      <ufl_symbol>
        <string_value lines="1">d3</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="UserDefined">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <value type="value" name="WholeMesh">
            <cpp rank="0">
              <members>
                <string_value lines="20" type="code" language="cpp">GenericFunction_ptr num_ptr, sol_ptr;</string_value>
              </members>
              <initialization>
                <string_value lines="20" type="code" language="cpp">num_ptr = system()-&gt;fetch_field("Field3")-&gt;genericfunction_ptr(time());
sol_ptr = system()-&gt;fetch_coeff("AnalyticField")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value lines="20" type="code" language="cpp">dolfin::Array&lt;double&gt; num(1), sol(1);
num_ptr-&gt;eval(num, x, cell);
sol_ptr-&gt;eval(sol, x, cell);
values[0] = std::abs(num[0] - sol[0]);</string_value>
              </eval>
            </cpp>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics>
          <functional name="L2NormSquared">
            <string_value lines="20" type="code" language="python">int = d3*d3*dx</string_value>
            <ufl_symbol>
              <string_value lines="1">int</string_value>
            </ufl_symbol>
            <quadrature_rule name="default"/>
          </functional>
        </include_in_statistics>
      </diagnostics>
    </coefficient>
    <coefficient name="AbsoluteDifference4">
      <ufl_symbol>
        <string_value lines="1">d4</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="UserDefined">
            <family>
              <string_value>CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <value type="value" name="WholeMesh">
            <cpp rank="0">
              <members>
                <string_value lines="20" type="code" language="cpp">GenericFunction_ptr num_ptr, sol_ptr;</string_value>
              </members>
              <initialization>
                <string_value lines="20" type="code" language="cpp">num_ptr = system()-&gt;fetch_field("Field4")-&gt;genericfunction_ptr(time());
sol_ptr = system()-&gt;fetch_coeff("AnalyticField")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value lines="20" type="code" language="cpp">dolfin::Array&lt;double&gt; num(1), sol(1);
num_ptr-&gt;eval(num, x, cell);
sol_ptr-&gt;eval(sol, x, cell);
values[0] = std::abs(num[0] - sol[0]);</string_value>
              </eval>
            </cpp>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics>
          <functional name="L2NormSquared">
            <string_value lines="20" type="code" language="python">int = d4*d4*dx</string_value>
            <ufl_symbol>
              <string_value lines="1">int</string_value>
            </ufl_symbol>
            <quadrature_rule name="default"/>
          </functional>
        </include_in_statistics>
      </diagnostics>
    </coefficient>
    <nonlinear_solver name="SNES">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">F1 = (inner(grad(u1_t),grad(u1_i)) - u1_t*f)*dx + u1_t*g[0]*ds(1) - u1_t*g[0]*ds(2) + u1_t*g[1]*ds(3) - u1_t*g[1]*ds(4)
F2 = (inner(grad(u2_t),grad(u2_i)) - u2_t*f)*dx + u2_t*g[0]*ds(1) - u2_t*g[0]*ds(2) + u2_t*g[1]*ds(3) - u2_t*g[1]*ds(4)
F3 = (inner(grad(u3_t),grad(u3_i)) - u3_t*f)*dx + u3_t*g[0]*ds(1) - u3_t*g[0]*ds(2) + u3_t*g[1]*ds(3) - u3_t*g[1]*ds(4)
F4 = (inner(grad(u4_t),grad(u4_i)) - u4_t*f)*dx + u4_t*g[0]*ds(1) - u4_t*g[0]*ds(2) + u4_t*g[1]*ds(3) - u4_t*g[1]*ds(4)
F = F1 + F2 + F3 + F4</string_value>
          <ufl_symbol>
            <string_value lines="1">F</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value lines="20" type="code" language="python">J = derivative(F,us_i,us_a)</string_value>
          <ufl_symbol>
            <string_value lines="1">J</string_value>
          </ufl_symbol>
        </form>
        <quadrature_rule name="default"/>
        <snes_type name="ls">
          <ls_type name="cubic"/>
          <convergence_test name="skip"/>
        </snes_type>
        <relative_error>
          <real_value rank="0">1.e-7</real_value>
        </relative_error>
        <absolute_error>
          <real_value rank="0">1.e-16</real_value>
        </absolute_error>
        <max_iterations>
          <integer_value rank="0">1</integer_value>
        </max_iterations>
        <monitors>
          <view_snes/>
          <residual/>
        </monitors>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="fieldsplit">
            <composite_type name="additive"/>
            <fieldsplit name="Field1">
              <field name="Field1"/>
              <monitors>
                <view_index_set/>
              </monitors>
              <linear_solver>
                <iterative_method name="fgmres">
                  <restart>
                    <integer_value rank="0">30</integer_value>
                  </restart>
                  <relative_error>
                    <real_value rank="0">1.e-8</real_value>
                  </relative_error>
                  <max_iterations>
                    <integer_value rank="0">1000</integer_value>
                  </max_iterations>
                  <zero_initial_guess/>
                  <monitors>
                    <preconditioned_residual/>
                  </monitors>
                </iterative_method>
                <preconditioner name="sor"/>
                <remove_null_space>
                  <null_space name="Field1">
                    <remove_from_rhs/>
                    <monitors>
                      <view_index_set/>
                    </monitors>
                  </null_space>
                  <monitors>
                    <view_null_space/>
                  </monitors>
                </remove_null_space>
              </linear_solver>
            </fieldsplit>
            <fieldsplit name="Fields2And3And4">
              <monitors>
                <view_index_set/>
              </monitors>
              <linear_solver>
                <iterative_method name="preonly"/>
                <preconditioner name="fieldsplit">
                  <composite_type name="additive"/>
                  <fieldsplit name="Field2">
                    <field name="Field2"/>
                    <monitors>
                      <view_index_set/>
                    </monitors>
                    <linear_solver>
                      <iterative_method name="fgmres">
                        <restart>
                          <integer_value rank="0">30</integer_value>
                        </restart>
                        <relative_error>
                          <real_value rank="0">1.e-8</real_value>
                        </relative_error>
                        <max_iterations>
                          <integer_value rank="0">1000</integer_value>
                        </max_iterations>
                        <zero_initial_guess/>
                        <monitors>
                          <preconditioned_residual/>
                        </monitors>
                      </iterative_method>
                      <preconditioner name="sor"/>
                      <remove_null_space>
                        <null_space name="Field2">
                          <remove_from_rhs/>
                          <monitors>
                            <view_index_set/>
                          </monitors>
                        </null_space>
                        <monitors>
                          <view_null_space/>
                        </monitors>
                      </remove_null_space>
                    </linear_solver>
                  </fieldsplit>
                  <fieldsplit name="Fields3And4">
                    <monitors>
                      <view_index_set/>
                    </monitors>
                    <linear_solver>
                      <iterative_method name="fgmres">
                        <restart>
                          <integer_value rank="0">30</integer_value>
                        </restart>
                        <relative_error>
                          <real_value rank="0">1.e-8</real_value>
                        </relative_error>
                        <max_iterations>
                          <integer_value rank="0">1000</integer_value>
                        </max_iterations>
                        <zero_initial_guess/>
                        <monitors>
                          <preconditioned_residual/>
                        </monitors>
                      </iterative_method>
                      <preconditioner name="sor"/>
                      <remove_null_space>
                        <null_space name="Field3">
                          <field name="Field3">
                            <constant>
                              <real_value rank="0">1.0</real_value>
                            </constant>
                          </field>
                          <remove_from_rhs/>
                          <monitors>
                            <view_index_set/>
                          </monitors>
                        </null_space>
                        <null_space name="Field4">
                          <field name="Field4">
                            <constant>
                              <real_value rank="0">1.0</real_value>
                            </constant>
                          </field>
                          <remove_from_rhs/>
                          <monitors>
                            <view_index_set/>
                          </monitors>
                        </null_space>
                        <monitors>
                          <view_null_space/>
                        </monitors>
                      </remove_null_space>
                    </linear_solver>
                  </fieldsplit>
                </preconditioner>
              </linear_solver>
            </fieldsplit>
          </preconditioner>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
    </nonlinear_solver>
    <solve name="in_timeloop"/>
  </system>
</terraferma_options>
