<?xml version='1.0' encoding='utf-8'?>
<harness_options>
  <length>
    <string_value lines="1">short</string_value>
  </length>
  <owner>
    <string_value lines="1">cwilson</string_value>
  </owner>
  <description>
    <string_value lines="1">van Keken subduction benchmark 1c</string_value>
  </description>
  <simulations>
    <simulation name="Subduction">
      <input_file>
        <string_value lines="1" type="filename">subduction.tfml</string_value>
      </input_file>
      <run_when name="input_changed_or_output_missing"/>
      <dependencies>
        <run name="SplitMesh">
          <input_file>
            <string_value lines="1" type="filename">sepran_converted_mesh.xml</string_value>
          </input_file>
          <run_when name="input_changed_or_output_missing"/>
          <required_input>
            <filenames name="meshfiles">
              <python>
                <string_value lines="20" type="code" language="python">meshfiles = ["sepran_converted_mesh"+ext for ext in ["_facet_region.xml", "_physical_region.xml"]]</string_value>
              </python>
            </filenames>
            <filenames name="centroid">
              <string>
                <string_value lines="1" type="filename">centroid_split.py</string_value>
              </string>
            </filenames>
          </required_input>
          <required_output>
            <filenames name="meshfiles">
              <python>
                <string_value lines="20" type="code" language="python">meshfiles = ["sepran_converted_mesh_split"+ext for ext in [".xml", "_facet_region.xml", "_physical_region.xml"]]</string_value>
              </python>
            </filenames>
          </required_output>
          <commands>
            <command name="split_mesh">
              <string_value lines="1">split_mesh -s 7 -p 8 -n 77 -c centroid_split.py sepran_converted_mesh.xml</string_value>
            </command>
          </commands>
        </run>
      </dependencies>
      <variables>
        <variable name="T_11_11">
          <string_value lines="20" type="code" language="python">from buckettools.statfile import parser



det = parser("subduction.det")

T_11_11 = det["Solid"]["Temperature"]["SlabPoint"][0,-1]-273.</string_value>
        </variable>
        <variable name="runtime">
          <string_value lines="20" type="code" language="python">from buckettools.statfile import parser



det = parser("subduction.det")

runtime = det["ElapsedWallTime"]["value"][-1]</string_value>
        </variable>
        <variable name="T_wedge">
          <string_value lines="20" type="code" language="python">from buckettools.statfile import parser
from math import sqrt



det = parser("subduction.det")

T_wedge = sqrt(sum((det["Solid"]["Temperature"]["Wedge"][:,-1]-273.)**2)/78.)</string_value>
        </variable>
        <variable name="T_slab">
          <string_value lines="20" type="code" language="python">from buckettools.statfile import parser
from math import sqrt



det = parser("subduction.det")

T_slab = sqrt(sum((det["Solid"]["Temperature"]["Slab"][:,-1]-273.)**2)/36.)</string_value>
        </variable>
      </variables>
    </simulation>
  </simulations>
  <tests>
    <test name="T_11_11">
      <string_value lines="20" type="code" language="python">test = 388.5
assert abs(T_11_11 - test) &lt; 1.0</string_value>
    </test>
    <test name="runtime">
      <string_value lines="20" type="code" language="python">test = 10.
assert ( runtime &lt;= test)</string_value>
    </test>
    <test name="T_wedge">
      <string_value lines="20" type="code" language="python">test = 853.5
assert abs(T_wedge - test) &lt; 1.0</string_value>
    </test>
    <test name="T_slab">
      <string_value lines="20" type="code" language="python">test = 504.0
assert abs(T_slab - test) &lt; 1.0</string_value>
    </test>
  </tests>
</harness_options>
