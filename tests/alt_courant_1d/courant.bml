<?xml version='1.0' encoding='utf-8'?>
<bucket_options>
  <geometry>
    <dimension>
      <integer_value rank="0">1</integer_value>
    </dimension>
    <mesh name="Mesh">
      <source name="UnitInterval">
        <number_cells>
          <integer_value rank="0">10</integer_value>
        </number_cells>
        <cell>
          <string_value>interval</string_value>
        </cell>
      </source>
    </mesh>
  </geometry>
  <io>
    <output_base_name>
      <string_value lines="1">courant</string_value>
    </output_base_name>
    <detectors/>
    <dump_periods/>
  </io>
  <timestepping>
    <current_time>
      <real_value rank="0">0.0</real_value>
    </current_time>
    <finish_time>
      <real_value rank="0">10.0</real_value>
    </finish_time>
    <timestep>
      <coefficient name="Timestep">
        <ufl_symbol>
          <string_value lines="1">dt</string_value>
        </ufl_symbol>
        <type name="Constant">
          <rank name="Scalar" rank="0">
            <value name="WholeMesh">
              <constant>
                <real_value rank="0">1.0</real_value>
              </constant>
            </value>
          </rank>
        </type>
      </coefficient>
    </timestep>
  </timestepping>
  <global_parameters/>
  <system name="CourantNumber">
    <mesh name="Mesh"/>
    <ufl_symbol>
      <string_value lines="1">uc</string_value>
    </ufl_symbol>
    <coefficient name="Velocity">
      <ufl_symbol>
        <string_value lines="1">v</string_value>
      </ufl_symbol>
      <type name="Constant">
        <rank name="Scalar" rank="0">
          <value type="value" name="WholeMesh">
            <constant>
              <real_value rank="0">-1.0</real_value>
            </constant>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics/>
      </diagnostics>
    </coefficient>
    <coefficient name="AltCourantNumber">
      <ufl_symbol>
        <string_value lines="1">ac</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P0">
            <family>
              <string_value>DG</string_value>
            </family>
            <degree>
              <integer_value rank="0">0</integer_value>
            </degree>
          </element>
          <value type="value" name="WholeMesh">
            <cpp rank="0">
              <members>
                <string_value lines="20" type="python">GenericFunction_ptr v;</string_value>
              </members>
              <initialization>
                <string_value lines="20" type="python">v = system()-&gt;fetch_coeff("Velocity")-&gt;genericfunction_ptr(time());</string_value>
              </initialization>
              <eval>
                <string_value lines="20" type="python">const dolfin::Cell dcell((*system()-&gt;mesh()), cell.index);
dolfin::Array&lt;double&gt; v_values(1);
v-&gt;eval(v_values, x, cell);
values[0] = (std::abs(v_values.max())*bucket()-&gt;timestep())/dcell.diameter();</string_value>
              </eval>
            </cpp>
          </value>
        </rank>
      </type>
      <diagnostics>
        <include_in_statistics>
          <functional name="Integral">
            <string_value lines="20" type="python">int = ac*dx</string_value>
            <ufl_symbol>
              <string_value lines="1">int</string_value>
            </ufl_symbol>
          </functional>
        </include_in_statistics>
      </diagnostics>
    </coefficient>
    <solve name="with_diagnostics"/>
  </system>
</bucket_options>
