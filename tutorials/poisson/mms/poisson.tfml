<?xml version='1.0' encoding='utf-8'?>
<terraferma_options>
  <geometry>
    <dimension>
      <integer_value rank="0">2</integer_value>
    </dimension>
    <mesh name="Mesh">
      <source name="UnitSquare">
        <number_cells>
          <integer_value shape="2" dim1="2" rank="1">32 32</integer_value>
        </number_cells>
        <diagonal>
          <string_value lines="1">right/left</string_value>
        </diagonal>
        <cell>
          <string_value lines="1">triangle</string_value>
        </cell>
      </source>
    </mesh>
  </geometry>
  <io>
    <output_base_name>
      <string_value lines="1">poisson</string_value>
    </output_base_name>
    <dump_periods/>
    <detectors/>
  </io>
  <global_parameters/>
  <system name="Poisson">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">us</string_value>
    </ufl_symbol>
    <field name="u">
      <ufl_symbol name="global">
        <string_value lines="1">u</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.</real_value>
            </constant>
          </initial_condition>
          <boundary_condition name="homogeneous">
            <boundary_ids>
              <integer_value shape="3" rank="1">1 3 4</integer_value>
            </boundary_ids>
            <sub_components name="All">
              <type type="boundary_condition" name="Dirichlet">
                <python rank="0">
                  <string_value lines="20" type="code" language="python">from math import exp
def val(x):
  global exp
  return exp(x[0] + x[1]/2.)</string_value>
                </python>
              </type>
            </sub_components>
          </boundary_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
        <include_in_statistics/>
        <include_residual_in_visualization/>
      </diagnostics>
    </field>
    <coefficient name="f">
      <ufl_symbol name="global">
        <string_value lines="1">f</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <value type="value" name="WholeMesh">
            <python rank="0">
              <string_value lines="20" type="code" language="python">from math import exp
def val(x):
  global exp
  return -5./4.*exp(x[0] + x[1]/2.)</string_value>
            </python>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <coefficient name="g">
      <ufl_symbol name="global">
        <string_value lines="1">g</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <value type="value" name="WholeMesh">
            <python rank="0">
              <string_value lines="20" type="code" language="python">from math import exp
def val(x):
  global exp
  return exp(x[0] + x[1]/2.)</string_value>
            </python>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <coefficient name="AnalyticSolution">
      <ufl_symbol name="global">
        <string_value lines="1">ue</string_value>
      </ufl_symbol>
      <type name="Expression">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <value type="value" name="WholeMesh">
            <python rank="0">
              <string_value lines="20" type="code" language="python">from math import exp
def val(x):
  global exp
  return exp(x[0] + x[1]/2.)</string_value>
            </python>
          </value>
        </rank>
      </type>
      <diagnostics/>
    </coefficient>
    <nonlinear_solver name="SNES">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">F = (inner(grad(u_t),grad(u_i)) - u_t*f)*dx - u_t*g*ds(2)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">F</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value lines="20" type="code" language="python">J = derivative(F,us_i,us_a)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">J</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <snes_type name="ls">
          <ls_type name="cubic"/>
          <convergence_test name="default"/>
        </snes_type>
        <relative_error>
          <real_value rank="0">1.e-7</real_value>
        </relative_error>
        <absolute_error>
          <real_value rank="0">1.e-16</real_value>
        </absolute_error>
        <max_iterations>
          <integer_value rank="0">20</integer_value>
        </max_iterations>
        <monitors>
          <view_snes/>
          <residual/>
        </monitors>
        <linear_solver>
          <iterative_method name="preonly"/>
          <preconditioner name="lu">
            <factorization_package name="umfpack"/>
          </preconditioner>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="in_timeloop"/>
    </nonlinear_solver>
    <functional name="uL2NormErrorSquared">
      <string_value lines="20" type="code" language="python">e2 = (u-ue)**2*dx</string_value>
      <ufl_symbol name="functional">
        <string_value lines="1">e2</string_value>
      </ufl_symbol>
      <form_representation name="quadrature"/>
      <quadrature_rule name="default"/>
      <include_in_statistics/>
    </functional>
  </system>
  <system name="Error">
    <mesh name="Mesh"/>
    <ufl_symbol name="global">
      <string_value lines="1">uerr</string_value>
    </ufl_symbol>
    <field name="error">
      <ufl_symbol name="global">
        <string_value lines="1">e</string_value>
      </ufl_symbol>
      <type name="Function">
        <rank name="Scalar" rank="0">
          <element name="P1">
            <family>
              <string_value lines="1">CG</string_value>
            </family>
            <degree>
              <integer_value rank="0">1</integer_value>
            </degree>
          </element>
          <initial_condition type="initial_condition" name="WholeMesh">
            <constant>
              <real_value rank="0">0.</real_value>
            </constant>
          </initial_condition>
        </rank>
      </type>
      <diagnostics>
        <include_in_visualization/>
      </diagnostics>
    </field>
    <nonlinear_solver name="solver">
      <type name="SNES">
        <form name="Residual" rank="0">
          <string_value lines="20" type="code" language="python">F = e_t*(e_i - (u_i - ue))*dx</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">F</string_value>
          </ufl_symbol>
        </form>
        <form name="Jacobian" rank="1">
          <string_value lines="20" type="code" language="python">J = derivative(F,e_i,e_a)</string_value>
          <ufl_symbol name="solver">
            <string_value lines="1">J</string_value>
          </ufl_symbol>
        </form>
        <form_representation name="quadrature"/>
        <quadrature_rule name="default"/>
        <snes_type name="ksponly"/>
        <relative_error>
          <real_value rank="0">1.e-10</real_value>
        </relative_error>
        <absolute_error>
          <real_value rank="0">1.e-20</real_value>
        </absolute_error>
        <max_iterations>
          <integer_value rank="0">20</integer_value>
        </max_iterations>
        <monitors/>
        <linear_solver>
          <iterative_method name="cg">
            <relative_error>
              <real_value rank="0">1.e-10</real_value>
            </relative_error>
            <max_iterations>
              <integer_value rank="0">20</integer_value>
            </max_iterations>
            <zero_initial_guess/>
            <monitors/>
          </iterative_method>
          <preconditioner name="sor"/>
        </linear_solver>
        <never_ignore_solver_failures/>
      </type>
      <solve name="in_timeloop"/>
    </nonlinear_solver>
  </system>
</terraferma_options>
